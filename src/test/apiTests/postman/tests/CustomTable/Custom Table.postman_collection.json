{
	"info": {
		"_postman_id": "6d554a27-d145-4885-a7ce-a99eb1cb7a58",
		"name": "Custom Table",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create / Delete / Create CET",
			"item": [
				{
					"name": "Create CustomCet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"CustomCet\",\n    \"code\": \"CustomCet\",\n    \"description\": \"CustomCet\",\n    \"sqlStorageConfiguration\": {\n        \"storeAsTable\": true\n    },\n    \"fields\": [\n{\n            \"code\": \"fieldA\",\n            \"fieldType\": \"STRING\",\n            \"storageType\": \"SINGLE\",\n            \"valueRequired\": false,\n            \"description\": \"field\",\n            \"isUnique\": false,\n            \"storages\": [\n                \"SQL\"\n            ]\n        }\n    ],\n    \"availableStorages\": [\n        \"SQL\"\n    ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CustomCet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/CustomCet",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"CustomCet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CustomCet again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"CustomCet\",\n    \"code\": \"CustomCet\",\n    \"description\": \"CustomCet\",\n    \"sqlStorageConfiguration\": {\n        \"storeAsTable\": true\n    },\n    \"fields\": [\n{\n            \"code\": \"fieldA\",\n            \"fieldType\": \"STRING\",\n            \"storageType\": \"SINGLE\",\n            \"valueRequired\": false,\n            \"description\": \"field\",\n            \"isUnique\": false,\n            \"storages\": [\n                \"SQL\"\n            ]\n        }\n    ],\n    \"availableStorages\": [\n        \"SQL\"\n    ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check CustomCet exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/CustomCet",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"CustomCet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CustomCet Again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/CustomCet",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"CustomCet"
							]
						}
					},
					"response": []
				}
			],
			"description": "Scenario:\r\n1.) Create a new CET, add fields.\r\n2.) Delete the CET.\r\n3.) Recreate the same CET.\r\n\r\nExpected Result:\r\nThe CET should be created.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "CET Reference an existing JPA Entity",
			"item": [
				{
					"name": "Create custom entity category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"BOOKS\",\n\t\"name\": \"Books\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customEntityCategory/entity/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"customEntityCategory",
								"entity",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create cet scifi -  non SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"JPA reference CFT must be stored in a SINGLE field storage type.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"customEntityCategoryCode\": \"BOOKS\",\n\t\"code\": \"scifi\",\n\t\"description\": \"Sci Fi\",\n\t\"name\": \"Sci Fi\",\n\t\"availableStorages\": [\"SQL\"],\n\t\"sqlStorageConfiguration\": {\n\t\t\"storeAsTable\": true\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"code\": \"title\",\n\t\t\t\"description\": \"Title\",\n\t\t\t\"fieldType\": \"STRING\",\n\t\t\t\"storageType\": \"SINGLE\",\n\t\t\t\"storages\": [\"SQL\"],\n\t\t\t\"valueRequired\": true,\n\t\t\t\"isUnique\": true\n\t\t},\n\t\t{\n\t\t\t\"code\": \"country\",\n\t\t\t\"description\": \"Country\",\n\t\t\t\"fieldType\": \"ENTITY\",\n\t\t\t\"storageType\": \"LIST\",\n\t\t\t\"storages\": [\"SQL\"],\n\t\t\t\"valueRequired\": false,\n\t\t\t\"isUnique\": false,\n\t\t\t\"entityClazz\": \"org.meveo.model.billing.Country\"\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create cet scifi",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"customEntityCategoryCode\": \"BOOKS\",\n\t\"code\": \"scifi\",\n\t\"description\": \"Sci Fi\",\n\t\"name\": \"Sci Fi\",\n\t\"availableStorages\": [\"SQL\"],\n\t\"sqlStorageConfiguration\": {\n\t\t\"storeAsTable\": true\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"code\": \"title\",\n\t\t\t\"description\": \"Title\",\n\t\t\t\"fieldType\": \"STRING\",\n\t\t\t\"storageType\": \"SINGLE\",\n\t\t\t\"storages\": [\"SQL\"],\n\t\t\t\"valueRequired\": true,\n\t\t\t\"isUnique\": true\n\t\t},\n\t\t{\n\t\t\t\"code\": \"country\",\n\t\t\t\"description\": \"Country\",\n\t\t\t\"fieldType\": \"ENTITY\",\n\t\t\t\"storageType\": \"SINGLE\",\n\t\t\t\"storages\": [\"SQL\"],\n\t\t\t\"valueRequired\": false,\n\t\t\t\"isUnique\": false,\n\t\t\t\"entityClazz\": \"org.meveo.model.billing.Country\"\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert scifi books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"ceiUuid\", jsonData[0].uuid);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"Frankenstein\",\n        \"type\": \"scifi\",\n        \"properties\": {\n            \"title\": \"Frankenstein\",\n            \"country\": 166\n        }\n    }\n]"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/default/persistence",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"default",
								"persistence"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get frankenstein book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.title).to.eql(\"Frankenstein\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/default/persistence/scifi/{{ceiUuid}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"default",
								"persistence",
								"scifi",
								"{{ceiUuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete category and cets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"BOOKS\",\n\t\"name\": \"Books\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customEntityCategory/entity/BOOKS?deleteRelatedTemplates=true",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"customEntityCategory",
								"entity",
								"BOOKS"
							],
							"query": [
								{
									"key": "deleteRelatedTemplates",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tables are not deleted",
			"item": [
				{
					"name": "Create CET in SQL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"TestTable\",\n  \"code\": \"TestTable\",\n  \"availableStorages\": [\n    \"SQL\"\n  ],\n  \"sqlStorageConfiguration\" : {\n      \"storeAsTable\" : true\n  },\n  \"description\": \"TestTable\",\n  \"fields\": [\n    {\n      \"code\": \"id\",\n      \"identifier\": true,\n      \"fieldType\": \"STRING\",\n      \"storages\": [\n        \"SQL\"\n      ],\n      \"storageType\": \"SINGLE\",\n      \"valueRequired\": false,\n      \"description\": \"id\",\n      \"isUnique\": false,\n      \"allowEdit\": false,\n      \"maxValue\": \"100\"\n    }    \n  ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert data",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"o1\",\n        \"type\": \"TestTable\",\n        \"properties\": {\n            \"id\": \"TOTO\"\n        }\n    }\n]"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/{{missionId}}/persistence",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"{{missionId}}",
								"persistence"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the cet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/TestCet",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"TestCet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create the CET again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"TestTable\",\n  \"code\": \"TestTable\",\n  \"availableStorages\": [\n    \"SQL\"\n  ],\n  \"sqlStorageConfiguration\" : {\n      \"storeAsTable\" : true\n  },\n  \"description\": \"TestTable\",\n  \"fields\": [\n    {\n      \"code\": \"id\",\n      \"identifier\": true,\n      \"fieldType\": \"STRING\",\n      \"storages\": [\n        \"SQL\"\n      ],\n      \"storageType\": \"SINGLE\",\n      \"valueRequired\": false,\n      \"description\": \"id\",\n      \"isUnique\": false,\n      \"allowEdit\": false,\n      \"maxValue\": \"100\"\n    }    \n  ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check data still exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Data still exists\", function () {",
									"    pm.expect(jsonData[0].id).to.eql(\"TOTO\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/{{missionId}}/persistence/TestTable/list",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"{{missionId}}",
								"persistence",
								"TestTable",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the CET with the data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/TestTable?withData=true",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"TestTable"
							],
							"query": [
								{
									"key": "withData",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CET once again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"TestTable\",\n  \"code\": \"TestTable\",\n  \"availableStorages\": [\n    \"SQL\"\n  ],\n  \"sqlStorageConfiguration\" : {\n      \"storeAsTable\" : true\n  },\n  \"description\": \"TestTable\",\n  \"fields\": [\n    {\n      \"code\": \"id\",\n      \"identifier\": true,\n      \"fieldType\": \"STRING\",\n      \"storages\": [\n        \"SQL\"\n      ],\n      \"storageType\": \"SINGLE\",\n      \"valueRequired\": false,\n      \"description\": \"id\",\n      \"isUnique\": false,\n      \"allowEdit\": false,\n      \"maxValue\": \"100\"\n    }    \n  ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check data does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"No data returned\", function () {",
									"    pm.expect(jsonData.length).to.eql(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/{{missionId}}/persistence/TestTable/list",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"{{missionId}}",
								"persistence",
								"TestTable",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the CET with the data bis",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/TestTable?withData=true",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"TestTable"
							],
							"query": [
								{
									"key": "withData",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Remove tables on module uninstall",
			"item": [
				{
					"name": "Create CET in SQL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"TestTable\",\n  \"code\": \"TestTable\",\n  \"availableStorages\": [\n    \"SQL\"\n  ],\n  \"sqlStorageConfiguration\" : {\n      \"storeAsTable\" : true\n  },\n  \"description\": \"TestTable\",\n  \"fields\": [\n    {\n      \"code\": \"id\",\n      \"identifier\": true,\n      \"fieldType\": \"STRING\",\n      \"storages\": [\n        \"SQL\"\n      ],\n      \"storageType\": \"SINGLE\",\n      \"valueRequired\": false,\n      \"description\": \"id\",\n      \"isUnique\": false,\n      \"allowEdit\": false,\n      \"maxValue\": \"100\"\n    }    \n  ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CET B in SQL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"TestTableB\",\n  \"code\": \"TestTableB\",\n  \"availableStorages\": [\n    \"SQL\"\n  ],\n  \"sqlStorageConfiguration\" : {\n      \"storeAsTable\" : true\n  },\n  \"description\": \"TestTableB\",\n  \"superTemplate\": \"TestTable\",\n  \"fields\": [\n    {\n      \"code\": \"idB\",\n      \"identifier\": true,\n      \"fieldType\": \"STRING\",\n      \"storages\": [\n        \"SQL\"\n      ],\n      \"storageType\": \"SINGLE\",\n      \"valueRequired\": false,\n      \"description\": \"idB\",\n      \"isUnique\": false,\n      \"allowEdit\": false,\n      \"maxValue\": \"100\"\n    }    \n  ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CET C in SQL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"TestTableC\",\n  \"code\": \"TestTableC\",\n  \"availableStorages\": [\n    \"SQL\"\n  ],\n  \"sqlStorageConfiguration\" : {\n      \"storeAsTable\" : true\n  },\n  \"description\": \"TestTableC\",\n  \"superTemplate\": \"TestTableB\",\n  \"fields\": [\n    {\n      \"code\": \"idC\",\n      \"identifier\": true,\n      \"fieldType\": \"STRING\",\n      \"storages\": [\n        \"SQL\"\n      ],\n      \"storageType\": \"SINGLE\",\n      \"valueRequired\": false,\n      \"description\": \"idB\",\n      \"isUnique\": false,\n      \"allowEdit\": false,\n      \"maxValue\": \"100\"\n    }    \n  ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CET target",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"TestTableTarget\",\n  \"code\": \"TestTableTarget\",\n  \"availableStorages\": [\n    \"SQL\"\n  ],\n  \"sqlStorageConfiguration\" : {\n      \"storeAsTable\" : true\n  },\n  \"description\": \"TestTable\",\n  \"fields\": [\n    {\n      \"code\": \"id\",\n      \"identifier\": true,\n      \"fieldType\": \"STRING\",\n      \"storages\": [\n        \"SQL\"\n      ],\n      \"storageType\": \"SINGLE\",\n      \"valueRequired\": false,\n      \"description\": \"id\",\n      \"isUnique\": false,\n      \"allowEdit\": false,\n      \"maxValue\": \"100\"\n    }    \n  ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CRT",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"TestCrt\",\r\n  \"availableStorages\": [\"SQL\"],\r\n  \"name\": \"Test\",\r\n  \"isUnique\": false,\r\n  \"startNodeCode\": \"TestTableC\",\r\n  \"endNodeCode\": \"TestTableTarget\",\r\n  \"fields\": [\r\n        {\r\n            \"code\": \"name\",\r\n            \"fieldType\": \"STRING\",\r\n            \"storageType\": \"SINGLE\",\r\n            \"valueRequired\": false,\r\n            \"description\": \"name\",\r\n            \"isUnique\": true,\r\n            \"storages\": [\r\n                \"SQL\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customRelationshipTemplate/crt/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"customRelationshipTemplate",
								"crt",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert data",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"o1\",\n        \"type\": \"TestTableC\",\n        \"properties\": {\n            \"id\": \"TOTO\",\n            \"idB\": \"TOTOB\",\n            \"idC\": \"TOTOC\"\n        }\n    }\n]"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/{{missionId}}/persistence",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"{{missionId}}",
								"persistence"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create empty module",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"testingModule\",\r\n    \"license\": \"OPEN\",\r\n    \"description\": \"This is a testing module\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/install",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"install"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add CET C to module",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/testingModule/items/CustomEntityTemplate/TestTableC",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"testingModule",
								"items",
								"CustomEntityTemplate",
								"TestTableC"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add CET to module",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/testingModule/items/CustomEntityTemplate/TestTable",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"testingModule",
								"items",
								"CustomEntityTemplate",
								"TestTable"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add CET B to module",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/testingModule/items/CustomEntityTemplate/TestTableB",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"testingModule",
								"items",
								"CustomEntityTemplate",
								"TestTableB"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add CET Target to module",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/testingModule/items/CustomEntityTemplate/TestTableTarget",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"testingModule",
								"items",
								"CustomEntityTemplate",
								"TestTableTarget"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add crt to module",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/testingModule/items/CustomRelationshipTemplate/TestCrt",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"testingModule",
								"items",
								"CustomRelationshipTemplate",
								"TestCrt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Module with data",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/testingModule?removeData=true",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"testingModule"
							],
							"query": [
								{
									"key": "removeData",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create the CET again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"TestTable\",\n  \"code\": \"TestTable\",\n  \"availableStorages\": [\n    \"SQL\"\n  ],\n  \"sqlStorageConfiguration\" : {\n      \"storeAsTable\" : true\n  },\n  \"description\": \"TestTable\",\n  \"fields\": [\n    {\n      \"code\": \"id\",\n      \"identifier\": true,\n      \"fieldType\": \"STRING\",\n      \"storages\": [\n        \"SQL\"\n      ],\n      \"storageType\": \"SINGLE\",\n      \"valueRequired\": false,\n      \"description\": \"id\",\n      \"isUnique\": false,\n      \"allowEdit\": false,\n      \"maxValue\": \"100\"\n    }    \n  ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check data does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"No data returned\", function () {",
									"    pm.expect(jsonData.length).to.eql(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/{{missionId}}/persistence/TestTable/list",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"{{missionId}}",
								"persistence",
								"TestTable",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the CET with the data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/TestTable?withData=true",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"TestTable"
							],
							"query": [
								{
									"key": "withData",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CRT persistence",
			"item": [
				{
					"name": "Create source",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"CustomCetSource\",\n    \"code\": \"CustomCetSource\",\n    \"description\": \"CustomCetSource\",\n    \"sqlStorageConfiguration\": {\n        \"storeAsTable\": true\n    },\n    \"fields\": [\n{\n            \"code\": \"fieldA\",\n            \"fieldType\": \"STRING\",\n            \"storageType\": \"SINGLE\",\n            \"valueRequired\": false,\n            \"description\": \"field\",\n            \"isUnique\": true,\n            \"storages\": [\n                \"SQL\"\n            ]\n        }\n    ],\n    \"availableStorages\": [\n        \"SQL\"\n    ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create target",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"CustomCetTarget\",\n    \"code\": \"CustomCetTarget\",\n    \"description\": \"CustomCetSource\",\n    \"sqlStorageConfiguration\": {\n        \"storeAsTable\": true\n    },\n    \"fields\": [\n{\n            \"code\": \"fieldA\",\n            \"fieldType\": \"STRING\",\n            \"storageType\": \"SINGLE\",\n            \"valueRequired\": false,\n            \"description\": \"field\",\n            \"isUnique\": true,\n            \"storages\": [\n                \"SQL\"\n            ]\n        }\n    ],\n    \"availableStorages\": [\n        \"SQL\"\n    ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create crt",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"TestCRT\",\r\n    \"availableStorages\": [\r\n        \"SQL\"\r\n    ],\r\n    \"name\": \"TestCRT\",\r\n    \"isUnique\": false,\r\n    \"startNodeCode\": \"CustomCetSource\",\r\n    \"endNodeCode\": \"CustomCetTarget\",\r\n    \"fields\": [\r\n        {\r\n            \"code\": \"name\",\r\n            \"fieldType\": \"STRING\",\r\n            \"storageType\": \"SINGLE\",\r\n            \"valueRequired\": false,\r\n            \"description\": \"name\",\r\n            \"isUnique\": true,\r\n            \"storages\": [\r\n                \"SQL\"\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customRelationshipTemplate/crt/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"customRelationshipTemplate",
								"crt",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put data",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "meveo",
									"type": "string"
								},
								{
									"key": "username",
									"value": "meveo.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Encoding",
								"value": "gzip",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"name\": \"dto\",\r\n        \"type\": \"CustomCetSource\",\r\n        \"properties\": {\r\n            \"fieldA\": \"Source\"\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"dtoTarget\",\r\n        \"type\": \"CustomCetTarget\",\r\n        \"properties\": {\r\n            \"fieldA\": \"Target\"\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"relation\",\r\n        \"type\": \"TestCRT\",\r\n        \"source\": \"dto\",\r\n        \"target\":\"dtoTarget\",\r\n        \"properties\": {\r\n            \"name\": \"MyCRT\"\r\n        }\r\n    }\r\n]"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/:project/persistence",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								":project",
								"persistence"
							],
							"variable": [
								{
									"key": "project",
									"value": "default",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CRT",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customRelationshipTemplate/relationship/TestCRT/CustomCetSource/CustomCetTarget",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"customRelationshipTemplate",
								"relationship",
								"TestCRT",
								"CustomCetSource",
								"CustomCetTarget"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete source",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/CustomCetSource",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"CustomCetSource"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete target",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/CustomCetTarget",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"CustomCetTarget"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}