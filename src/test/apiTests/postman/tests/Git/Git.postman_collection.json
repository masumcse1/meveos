{
	"info": {
		"_postman_id": "b31ce650-e68d-4f38-8de3-a553e6f20921",
		"name": "Git Copy",
		"description": "1/ Create a script that delete the TestCet\r\n2/ Create a notification triggered when TestCetDeux is created, this notification executes the previous script\r\n3/ Create TestCetDeux\r\n4/ Commit repository content\r\n5/ Check that TestCet has been deleted\r\n6/ Clean test data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Commit events",
			"item": [
				{
					"name": "Create / Update script",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<ScriptInstance>\n\t<code>org.meveo.test.DeleteCet</code>\n\t<type>JAVA</type>\n\t<script><![CDATA[\n\npackage org.meveo.test;\n\nimport org.meveo.admin.exception.BusinessException;\nimport org.meveo.model.customEntities.CustomEntityTemplate;\nimport org.meveo.service.custom.CustomEntityTemplateService;\nimport org.meveo.service.script.Script;\n\nimport javax.inject.Inject;\nimport java.util.Map;\n\npublic class DeleteCet extends Script {\n\n    @Override\n    public void execute(Map<String, Object> methodContext) throws BusinessException {\n    \tSystem.out.println(\"Called !!\");\n    \t\n    \tCustomEntityTemplateService service = (CustomEntityTemplateService) getServiceInterface(\"CustomEntityTemplateService\");\n        CustomEntityTemplate testCet = service.findByCode(\"TestCet\");\n        if(testCet == null) {\n        \tSystem.out.println(\"testCet is null !!\");\n    \t}\n        service.remove(testCet.getId());\n    }\n}\n\n\t]]></script>\n</ScriptInstance>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/investigation-core/api/rest/scriptInstance/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"investigation-core",
								"api",
								"rest",
								"scriptInstance",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"classNameFilter\" : \"org.meveo.event.qualifier.git.CommitEvent\",\n\t\"eventTypeFilter\" : \"CREATED\",\n\t\"elFilter\": \"#{event.getModifiedFiles().contains(\\\"facets/java/org/meveo/model/customEntities/TestCetDeux.java\\\")}\",\n\t\"scriptInstanceCode\": \"org.meveo.test.DeleteCet\",\n\t\"code\": \"GitNotif\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/notification/script",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"notification",
								"script"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create or update CET",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"TestCet\",\r\n  \"code\": \"TestCet\",\r\n  \"description\": \"TestCet\",\r\n  \"fields\": [\r\n    {\r\n      \"code\": \"toto\",\r\n      \"fieldType\": \"STRING\",\r\n      \"storageType\": \"SINGLE\",\r\n      \"valueRequired\": false,\r\n      \"description\": \"languageDeuxCode\",\r\n      \"isUnique\": false\r\n    }\r\n  ],\r\n  \"customEntityCategoryCode\": \"Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create or update CET 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"TestCetDeux\",\r\n  \"code\": \"TestCetDeux\",\r\n  \"description\": \"TestCetDeux\",\r\n  \"fields\": [\r\n    {\r\n      \"code\": \"toto\",\r\n      \"fieldType\": \"STRING\",\r\n      \"storageType\": \"SINGLE\",\r\n      \"valueRequired\": false,\r\n      \"description\": \"languageDeuxCode\",\r\n      \"isUnique\": false\r\n    }\r\n  ],\r\n  \"customEntityCategoryCode\": \"Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Commit repo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "message",
									"value": "Test Commit",
									"type": "text"
								},
								{
									"key": "pattern",
									"value": ".",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/git/repositories/:code/commit",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"git",
								"repositories",
								":code",
								"commit"
							],
							"variable": [
								{
									"key": "code",
									"value": "Meveo"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check CET is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"TestCet\",\r\n  \"code\": \"TestCet\",\r\n  \"description\": \"TestCet\",\r\n  \"field\": [\r\n    {\r\n      \"code\": \"testRef\",\r\n      \"fieldType\": \"ENTITY\",\r\n      \"storageType\": \"SINGLE\",\r\n      \"entityClazz\": \"CEI_test\",\r\n      \"valueRequired\": false,\r\n      \"description\": \"languageDeuxCode\",\r\n      \"isUnique\": false\r\n    }\r\n  ],\r\n  \"customEntityCategoryCode\": \"Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/TestCet",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"TestCet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/notification/script/GitNotif",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"notification",
								"script",
								"GitNotif"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CET",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"TestCet\",\r\n  \"code\": \"TestCet\",\r\n  \"description\": \"TestCet\",\r\n  \"field\": [\r\n    {\r\n      \"code\": \"testRef\",\r\n      \"fieldType\": \"ENTITY\",\r\n      \"storageType\": \"SINGLE\",\r\n      \"entityClazz\": \"CEI_test\",\r\n      \"valueRequired\": false,\r\n      \"description\": \"languageDeuxCode\",\r\n      \"isUnique\": false\r\n    }\r\n  ],\r\n  \"customEntityCategoryCode\": \"Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/TestCet",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"TestCet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CET 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/TestCetDeux",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"TestCetDeux"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete script",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/xml"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/investigation-core/api/rest/scriptInstance/org.meveo.test.DeleteCet",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"investigation-core",
								"api",
								"rest",
								"scriptInstance",
								"org.meveo.test.DeleteCet"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module integration",
			"item": [
				{
					"name": "Create git repo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"mv-calendar\",\n    \"remoteOrigin\": \"https://github.com/meveo-org/mv-calendar\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/git/repositories",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"git",
								"repositories"
							],
							"query": [
								{
									"key": "password",
									"value": "MyPassPhrase",
									"disabled": true
								},
								{
									"key": "branch",
									"value": "develop",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create module",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"testModuleGit\",\n    \"license\": \"OPEN\",\n    \"description\": \"testModuleGit\",\n    \"moduleItems\": []\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/install",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"install"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"module\", JSON.stringify(pm.response.json().module));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/:code/items/:itemType/:itemCode",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								":code",
								"items",
								":itemType",
								":itemCode"
							],
							"variable": [
								{
									"key": "code",
									"value": "testModuleGit"
								},
								{
									"key": "itemType",
									"value": "GitRepository"
								},
								{
									"key": "itemCode",
									"value": "mv-calendar"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Module with item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"GitRepository entity has been added\", function () {\r",
									"    pm.expect(jsonData.module.moduleItems[0].dtoData.code).to.eql(\"mv-calendar\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module?code=testModuleGit",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module"
							],
							"query": [
								{
									"key": "code",
									"value": "testModuleGit"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/:code/items/:itemType/:itemCode",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								":code",
								"items",
								":itemType",
								":itemCode"
							],
							"variable": [
								{
									"key": "code",
									"value": "testModuleGit"
								},
								{
									"key": "itemType",
									"value": "GitRepository"
								},
								{
									"key": "itemCode",
									"value": "mv-calendar"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Module without item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Item has been removed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.module.moduleItems.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"testModule\",\n    \"license\": \"OPEN\",\n    \"description\": \"testModule\",\n    \"moduleItems\": [\n        {\n            \"customEntityTemplate\": {\n                \"code\": \"ExportableTest\",\n                \"sqlStorageConfiguration\": {\n                    \"storeAsTable\": false\n                },\n                \"name\": \"Exportable Test\",\n                \"description\": \"Exportable Test\",\n                \"availableStorages\":[],\n                \"fields\": [\n                    {\n                        \"code\": \"test\",\n                        \"description\": \"test\",\n                        \"fieldType\": \"STRING\",\n                        \"accountLevel\": \"CE_ExportableTest\",\n                        \"appliesTo\": \"CE_ExportableTest\",\n                        \"useInheritedAsDefaultValue\": false,\n                        \"storageType\": \"SINGLE\",\n                        \"valueRequired\": true,\n                        \"versionable\": false,\n                        \"triggerEndPeriodEvent\": false,\n                        \"allowEdit\": true,\n                        \"hideOnNew\": false,\n                        \"maxValue\": 255,\n                        \"guiPosition\": \"tab:Custom Fields:0;field:0\",\n                        \"isUnique\": false,\n                        \"isFilter\": false,\n                        \"identifier\": false,\n                        \"storages\": []\n                    }\n                ],\n                \"action\": []\n            }\n        },\n        {\n            \"customEntityInstance\": {\n                \"code\": \"test1\",\n                \"description\": \"test\",\n                \"cetCode\": \"ExportableTest\",\n                \"disabled\": false,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"test\",\n                            \"stringValue\": \"Value1\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module?code=testModuleGit",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module"
							],
							"query": [
								{
									"key": "code",
									"value": "testModuleGit"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete module",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"module\", JSON.stringify(pm.response.json().module));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/testModuleGit",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"testModuleGit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete repo",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/git/repositories/:code",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"git",
								"repositories",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "mv-calendar"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CRUD & git operations",
			"item": [
				{
					"name": "Create git repo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"test-repo\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/investigation-core/api/rest/git/repositories",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"investigation-core",
								"api",
								"rest",
								"git",
								"repositories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new branch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/investigation-core/api/rest/git/repositories/test-repo/branches/test-branch/checkout?create=true",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"investigation-core",
								"api",
								"rest",
								"git",
								"repositories",
								"test-repo",
								"branches",
								"test-branch",
								"checkout"
							],
							"query": [
								{
									"key": "create",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check branch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Current branch is test-branch\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.currentBranch).to.eql(\"test-branch\");",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/git/repositories/test-repo?",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"git",
								"repositories",
								"test-repo"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Checkout master",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/investigation-core/api/rest/git/repositories/test-repo/branches/master/checkout?create=true",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"investigation-core",
								"api",
								"rest",
								"git",
								"repositories",
								"test-repo",
								"branches",
								"master",
								"checkout"
							],
							"query": [
								{
									"key": "create",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check branch 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Current branch is test-branch\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.currentBranch).to.eql(\"master\");",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/git/repositories/test-repo?",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"git",
								"repositories",
								"test-repo"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete repo",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/git/repositories/:code",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"git",
								"repositories",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "test-repo"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}