{
	"info": {
		"_postman_id": "d86f336e-484f-4525-ac95-132ce8b04c53",
		"name": "Modules",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.get(\"variable_key\");",
									"var json = pm.response.json();",
									"var token = json[\"access_token\"];",
									"var refreshToken = json[\"refresh_token\"]",
									"pm.environment.set(\"access_token\", token);",
									"pm.environment.set(\"refresh_token\", refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "meveo.admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "meveo",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{keycloakClientId}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{keycloakClientSecret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{keycloakHostname}}:443/auth/realms/{{webContext}}/protocol/openid-connect/token",
							"protocol": "https",
							"host": [
								"{{keycloakHostname}}"
							],
							"port": "443",
							"path": [
								"auth",
								"realms",
								"{{webContext}}",
								"protocol",
								"openid-connect",
								"token"
							]
						},
						"description": "Request Keycloak and get auth token"
					},
					"response": []
				}
			]
		},
		{
			"name": "Module Item sync",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.get(\"variable_key\");",
									"var json = pm.response.json();",
									"var token = json[\"access_token\"];",
									"var refreshToken = json[\"refresh_token\"]",
									"pm.environment.set(\"access_token\", token);",
									"pm.environment.set(\"refresh_token\", refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "meveo.admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "meveo",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{keycloakClientId}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{keycloakClientSecret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{keycloakHostname}}:443/auth/realms/{{webContext}}/protocol/openid-connect/token",
							"protocol": "https",
							"host": [
								"{{keycloakHostname}}"
							],
							"port": "443",
							"path": [
								"auth",
								"realms",
								"{{webContext}}",
								"protocol",
								"openid-connect",
								"token"
							]
						},
						"description": "Request Keycloak and get auth token"
					},
					"response": []
				},
				{
					"name": "Create module 1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"MOD1\",\n\t\"description\": \"Module 1\",\n\t\"license\": \"GPL\",\n\t\"moduleItems\": [\n\t\t{\n\t\t\t\"dtoClassName\": \"org.meveo.api.dto.CustomEntityCategoryDto\",\n\t\t\t\"dtoData\": { \"code\": \"Books1\", \"name\": \"Books\" }\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create module 2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"MOD2\",\n\t\"description\": \"Module 2\",\n\t\"license\": \"GPL\",\n\t\"moduleItems\": [\n\t\t{\n\t\t\t\"dtoClassName\": \"org.meveo.api.dto.CustomEntityCategoryDto\",\n\t\t\t\"dtoData\": { \"code\": \"Books\", \"name\": \"Books\" }\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Install module 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"MOD1\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/install",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"install"
							]
						}
					},
					"response": []
				},
				{
					"name": "Install module 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"MOD2\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/install",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"install"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get module 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Value check', () => {\r",
									"    let jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.module.moduleItems.length).to.equal(1)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module?code=MOD1",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module"
							],
							"query": [
								{
									"key": "code",
									"value": "MOD1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get module 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Value check', () => {\r",
									"    let jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.module.moduleItems.length).to.equal(1)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module?code=MOD2",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module"
							],
							"query": [
								{
									"key": "code",
									"value": "MOD2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete custom entity category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customEntityCategory/entity/Books",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"customEntityCategory",
								"entity",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete custom entity category 2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"MOD2\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customEntityCategory/entity/Books1",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"customEntityCategory",
								"entity",
								"Books1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get module 1 - deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Value check', () => {\r",
									"    let jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.module.moduleItems.length).to.equal(0)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module?code=MOD1",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module"
							],
							"query": [
								{
									"key": "code",
									"value": "MOD1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get module 2 - deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Value check', () => {\r",
									"    let jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.module.moduleItems.length).to.equal(0)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module?code=MOD2",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module"
							],
							"query": [
								{
									"key": "code",
									"value": "MOD2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete module 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MOD1",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"MOD1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete module 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MOD2",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"MOD2"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// setTimeout(function(){}, 500);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Custom fields sync",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.get(\"variable_key\");",
									"var json = pm.response.json();",
									"var token = json[\"access_token\"];",
									"var refreshToken = json[\"refresh_token\"]",
									"pm.environment.set(\"access_token\", token);",
									"pm.environment.set(\"refresh_token\", refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "meveo.admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "meveo",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{keycloakClientId}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{keycloakClientSecret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{keycloakHostname}}:443/auth/realms/{{webContext}}/protocol/openid-connect/token",
							"protocol": "https",
							"host": [
								"{{keycloakHostname}}"
							],
							"port": "443",
							"path": [
								"auth",
								"realms",
								"{{webContext}}",
								"protocol",
								"openid-connect",
								"token"
							]
						},
						"description": "Request Keycloak and get auth token"
					},
					"response": []
				},
				{
					"name": "Create module 1",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"code\": \"MODULE1\",\r\n\t\"name\": \"Module 1\",\r\n\t\"description\": \"Module 1\",\r\n\t\"license\": \"GPL\",\r\n\t\"moduleItems\": [\r\n\t\t{\r\n\t\t\t\"dtoClassName\": \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n\t\t\t\"dtoData\": {\r\n\t\t\t\t\"code\": \"TEST_CEC\",\r\n\t\t\t\t\"description\": \"TEST CEC\",\r\n\t\t\t\t\"name\": \"TEST_CEC\",\r\n\t\t\t\t\"availableStorages\": [\"SQL\"],\r\n\t\t\t\t\"sqlStorageConfiguration\": {\r\n\t\t\t\t\t\"storeAsTable\": false\r\n\t\t\t\t},\r\n\t\t\t\t\"fields\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"appliesTo\": \"MODULE1\",\r\n\t\t\t\t\t\t\"code\": \"FIELD_A\",\r\n\t\t\t\t\t\t\"description\": \"FIELD A\",\r\n\t\t\t\t\t\t\"fieldType\": \"STRING\",\r\n\t\t\t\t\t\t\"storageType\": \"SINGLE\",\r\n\t\t\t\t\t\t\"storages\": [\"SQL\"]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Install module 1",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"MODULE1\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/install",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"install"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create custom field b",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"FIELD_B\",\n\t\"description\": \"Field B\",\n\t\"fieldType\": \"STRING\",\n\t\"storageType\": \"SINGLE\",\n\t\"appliesTo\": \"CE_TEST_CEC\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customFieldTemplate/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"customFieldTemplate",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create custom field c",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"FIELD_C\",\n\t\"description\": \"Field C\",\n\t\"fieldType\": \"STRING\",\n\t\"storageType\": \"SINGLE\",\n\t\"appliesTo\": \"CE_TEST_CEC\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customFieldTemplate/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"customFieldTemplate",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get module 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"FIELD_B\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module?code=MODULE1",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module"
							],
							"query": [
								{
									"key": "code",
									"value": "MODULE1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete custom field template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customFieldTemplate/FIELD_A/CE_TEST_CEC",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"customFieldTemplate",
								"FIELD_A",
								"CE_TEST_CEC"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get module 1 - minus field a",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Body does not have supplied string\"] = !(responseBody.has(\"FIELD_A\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module?code=MODULE1",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module"
							],
							"query": [
								{
									"key": "code",
									"value": "MODULE1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete cet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/TEST_CEC",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"TEST_CEC"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete module 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MODULE1",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"MODULE1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Fork",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.get(\"variable_key\");",
									"var json = pm.response.json();",
									"var token = json[\"access_token\"];",
									"var refreshToken = json[\"refresh_token\"]",
									"pm.environment.set(\"access_token\", token);",
									"pm.environment.set(\"refresh_token\", refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "meveo.admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "meveo",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{keycloakClientId}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{keycloakClientSecret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{keycloakHostname}}:443/auth/realms/{{webContext}}/protocol/openid-connect/token",
							"protocol": "https",
							"host": [
								"{{keycloakHostname}}"
							],
							"port": "443",
							"path": [
								"auth",
								"realms",
								"{{webContext}}",
								"protocol",
								"openid-connect",
								"token"
							]
						},
						"description": "Request Keycloak and get auth token"
					},
					"response": []
				},
				{
					"name": "Create module 1",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"code\": \"MOBILE\",\r\n\t\"name\": \"Mobile\",\r\n\t\"description\": \"Mobile\",\r\n\t\"license\": \"GPL\",\r\n\t\"moduleItems\": [\r\n\t\t{\r\n\t\t\t\"dtoClassName\": \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n\t\t\t\"dtoData\": {\r\n\t\t\t\t\"code\": \"PHONES\",\r\n\t\t\t\t\"description\": \"Phones\",\r\n\t\t\t\t\"name\": \"PHONES\",\r\n\t\t\t\t\"availableStorages\": [\"SQL\"],\r\n\t\t\t\t\"sqlStorageConfiguration\": {\r\n\t\t\t\t\t\"storeAsTable\": false\r\n\t\t\t\t},\r\n\t\t\t\t\"fields\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"code\": \"IMEI\",\r\n\t\t\t\t\t\t\"description\": \"IMEI\",\r\n\t\t\t\t\t\t\"fieldType\": \"STRING\",\r\n\t\t\t\t\t\t\"storageType\": \"SINGLE\",\r\n\t\t\t\t\t\t\"storages\": [\"SQL\"]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete module 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MOBILE",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"MOBILE"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete cet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/PHONES",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"PHONES"
							]
						}
					},
					"response": []
				},
				{
					"name": "Install module 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"code\": \"MOBILE\",\r\n\t\"name\": \"Mobile\",\r\n\t\"description\": \"Mobile\",\r\n\t\"license\": \"GPL\",\r\n\t\"moduleItems\": [\r\n\t\t{\r\n\t\t\t\"dtoClassName\": \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n\t\t\t\"dtoData\": {\r\n\t\t\t\t\"code\": \"PHONES\",\r\n\t\t\t\t\"description\": \"Phones\",\r\n\t\t\t\t\"name\": \"PHONES\",\r\n\t\t\t\t\"availableStorages\": [\"SQL\"],\r\n\t\t\t\t\"sqlStorageConfiguration\": {\r\n\t\t\t\t\t\"storeAsTable\": false\r\n\t\t\t\t},\r\n\t\t\t\t\"fields\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"code\": \"IMEI\",\r\n\t\t\t\t\t\t\"description\": \"IMEI\",\r\n\t\t\t\t\t\t\"fieldType\": \"STRING\",\r\n\t\t\t\t\t\t\"storageType\": \"SINGLE\",\r\n\t\t\t\t\t\t\"storages\": [\"SQL\"]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/install",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"install"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fork module 1",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/fork/MOBILE",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"fork",
								"MOBILE"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create custom entity template 2",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"TABLETS\",\n\t\"description\": \"Tablets\",\n\t\"name\": \"Tablets\",\n\t\"availableStorages\": [\"SQL\"],\n\t\"sqlStorageConfiguration\": {\n\t\t\"storeAsTable\": false\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"code\": \"IMEI\",\n\t\t\t\"description\": \"IMEI\",\n\t\t\t\"fieldType\": \"STRING\",\n\t\t\t\"storageType\": \"SINGLE\",\n\t\t\t\"storages\": [\"SQL\"]\n\t\t}\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"cet",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add cet2 to module 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MOBILE/items/CustomEntityTemplate/TABLETS",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"MOBILE",
								"items",
								"CustomEntityTemplate",
								"TABLETS"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get module 1 with cet 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Find PHONES\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"PHONES\");\r",
									"});\r",
									"\r",
									"pm.test(\"Find TABLETS\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"TABLETS\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module?code=MOBILE",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module"
							],
							"query": [
								{
									"key": "code",
									"value": "MOBILE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete module 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MOBILE",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"module",
								"MOBILE"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete cet 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/PHONES",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"PHONES"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete cet 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/TABLETS",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{webContext}}",
								"api",
								"rest",
								"entityCustomization",
								"entity",
								"TABLETS"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Module in git",
			"item": [
				{
					"name": "#256 - Add \"gitRepository\" attribute to MeveoModule",
					"item": [
						{
							"name": "MeveoModuleCreate",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"testingModule\",\r\n    \"license\": \"OPEN\",\r\n    \"description\": \"This is a testing module\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"module",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "GitRepositoryCheckCreate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"currentBranch: master\", () => {\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.currentBranch).to.eql('master');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\":\"testingModule\"\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/git/repositories/testingModule",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"git",
										"repositories",
										"testingModule"
									]
								}
							},
							"response": []
						},
						{
							"name": "MeveoModuleRemove",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/testingModule",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"module",
										"testingModule"
									]
								}
							},
							"response": []
						},
						{
							"name": "GitRepositoryCheckDelete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"MeveoModule with code=testingModule does not exists.\", function() {\r",
											"   pm.expect(pm.response.code).to.be.oneOf([404]); \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\":\"testingModule\"\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/git/repositories/testingModule",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"git",
										"repositories",
										"testingModule"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "#257 - One entity can belongs to only one module",
					"item": [
						{
							"name": "Create the CET with missing parameters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"TEST_CEC\",\r\n    \"description\": \"TEST CEC\",\r\n    \"name\": \"TEST_CEC\",\r\n    \"availableStorages\": [\r\n        \"SQL\"\r\n    ],\r\n    \"sqlStorageConfiguration\": {\r\n        \"storeAsTable\": false\r\n    },\r\n    \"fields\": [\r\n        {\r\n            \"appliesTo\": \"MODULE1\",\r\n            \"code\": \"FIELD_A\",\r\n            \"description\": \"FIELD A\",\r\n            \"fieldType\": \"STRING\",\r\n            \"storageType\": \"SINGLE\",\r\n            \"storages\": [\r\n                \"SQL\"\r\n            ]\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/cet/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"cet",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Module 1",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"1\",\r\n\t\"code\": \"MODULE1\",\r\n\t\"name\": \"Module 1\",\r\n\t\"description\": \"Module 1\",\r\n\t\"license\": \"GPL\",\r\n\t\"moduleItems\": [\r\n\t]\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/install",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"module",
										"install"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Module 2",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"MODULE2\",\r\n\t\"name\": \"Module 2\",\r\n\t\"description\": \"Module 2\",\r\n\t\"license\": \"GPL\",\r\n\t\"moduleItems\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/install",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"module",
										"install"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create CTF",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"FIELD_B\",\r\n\t\"description\": \"Field B\",\r\n\t\"fieldType\": \"STRING\",\r\n\t\"storageType\": \"SINGLE\",\r\n\t\"appliesTo\": \"CE_TEST_CEC\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customFieldTemplate/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"customFieldTemplate",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add CTF to module 1",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MODULE1/items/CustomFieldTemplate/FIELD_B?appliesTo=CE_TEST_CEC",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"module",
										"MODULE1",
										"items",
										"CustomFieldTemplate",
										"FIELD_B"
									],
									"query": [
										{
											"key": "appliesTo",
											"value": "CE_TEST_CEC"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add CTF to module 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Illegal Argument Excpeption\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Impossible to add more than one ModuleItem\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"already belongs to module MODULE1\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MODULE2/items/CustomFieldTemplate/FIELD_B?appliesTo=CE_TEST_CEC",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"module",
										"MODULE2",
										"items",
										"CustomFieldTemplate",
										"FIELD_B"
									],
									"query": [
										{
											"key": "appliesTo",
											"value": "CE_TEST_CEC"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add CET A to Module 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MODULE1/items/CustomEntityTemplate/TEST_CEC",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"module",
										"MODULE1",
										"items",
										"CustomEntityTemplate",
										"TEST_CEC"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add CET A to Module 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Illegal Argument Excpeption\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Impossible to add more than one ModuleItem\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"already belongs to module MODULE1\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MODULE2/items/CustomEntityTemplate/TEST_CEC",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"module",
										"MODULE2",
										"items",
										"CustomEntityTemplate",
										"TEST_CEC"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove TEST_CEC",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"code\": \"ExportableTest\",\r\n        \"sqlStorageConfiguration\": {\"storeAsTable\": false},\r\n        \"name\": \"Exportable Test\",\r\n        \"description\": \"Exportable Test\",\r\n        \"availableStorages\":[],\r\n        \"fields\": [\r\n            {\r\n                \"code\": \"test\",\r\n                \"description\": \"test\",\r\n                \"fieldType\": \"STRING\",\r\n                \"accountLevel\": \"CE_ExportableTest\",\r\n                \"appliesTo\": \"CE_ExportableTest\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": true,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"maxValue\": 255,\r\n                \"guiPosition\": \"tab:Custom Fields:0;field:0\",\r\n                \"isUnique\": false,\r\n                \"isFilter\": false,\r\n                \"identifier\": false,\r\n                \"storages\": []\r\n            }\r\n        ],\r\n        \"action\": []\r\n    }"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/TEST_CEC",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"TEST_CEC"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Module 1",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MODULE1",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"module",
										"MODULE1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Module 2",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/module/MODULE2",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"module",
										"MODULE2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove CTF",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/field/FIELD_B/CE_TEST_CEC",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"entityCustomization",
										"field",
										"FIELD_B",
										"CE_TEST_CEC"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CET creation with missing parameters",
					"item": [
						{
							"name": "Remove CET with missing param before",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/entity/cetMIssingParam",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"cetMIssingParam"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove CFT with missing param before",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/entity/cftMIssingParam",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"cftMIssingParam"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create the CET with missing parameters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Missing parameter\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"dtoClassName\": \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n    \"name\": \"cetMIssingParam\",\r\n    \"availableStorages\": [\r\n        \"SQL\"\r\n    ],\r\n    \"sqlStorageConfiguration\": {\r\n        \"storeAsTable\": true\r\n    },\r\n    \"samples\": [],\r\n    \"audited\": false,\r\n    \"fields\": [\r\n        {\r\n            \"code\": \"fieldCei\",\r\n            \"description\": \"field for cei\",\r\n            \"fieldType\": \"STRING\",\r\n            \"accountLevel\": \"CE_ceicetInstall\",\r\n            \"appliesTo\": \"CE_ceicetInstall\",\r\n            \"useInheritedAsDefaultValue\": false,\r\n            \"storageType\": \"SINGLE\",\r\n            \"valueRequired\": false,\r\n            \"versionable\": false,\r\n            \"triggerEndPeriodEvent\": false,\r\n            \"allowEdit\": true,\r\n            \"hideOnNew\": false,\r\n            \"maxValue\": 255,\r\n            \"contentTypes\": [],\r\n            \"fileExtensions\": [],\r\n            \"saveOnExplorer\": false,\r\n            \"guiPosition\": \"tab:cetMIssingParam:0;field:0\",\r\n            \"identifier\": false,\r\n            \"storages\": [\r\n                \"SQL\"\r\n            ],\r\n            \"samples\": [],\r\n            \"summary\": true,\r\n            \"audited\": false,\r\n            \"persisted\": true,\r\n            \"unique\": false,\r\n            \"filter\": true\r\n        }\r\n    ],\r\n    \"actions\": []\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/cet/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"cet",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check CET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/entity/cetMIssingParam",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"cetMIssingParam"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create the CFT with missing parameters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Missing parameter\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"dtoClassName\": \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n    \"code\": \"cftMIssingParam\",\r\n    \"name\": \"ceicetInstall\",\r\n    \"availableStorages\": [\r\n        \"SQL\"\r\n    ],\r\n    \"sqlStorageConfiguration\": {\r\n        \"storeAsTable\": true\r\n    },\r\n    \"samples\": [],\r\n    \"audited\": false,\r\n    \"fields\": [\r\n        {\r\n            \"code\": \"fieldCei\",\r\n            \r\n            \"fieldType\": \"STRING\",\r\n            \"accountLevel\": \"CE_ceicetInstall\",\r\n            \"appliesTo\": \"CE_ceicetInstall\",\r\n            \"useInheritedAsDefaultValue\": false,\r\n            \"storageType\": \"SINGLE\",\r\n            \"valueRequired\": false,\r\n            \"versionable\": false,\r\n            \"triggerEndPeriodEvent\": false,\r\n            \"allowEdit\": true,\r\n            \"hideOnNew\": false,\r\n            \"maxValue\": 255,\r\n            \"contentTypes\": [],\r\n            \"fileExtensions\": [],\r\n            \"saveOnExplorer\": false,\r\n            \"guiPosition\": \"tab:cftMIssingParam:0;field:0\",\r\n            \"identifier\": false,\r\n            \"storages\": [\r\n                \"SQL\"\r\n            ],\r\n            \"samples\": [],\r\n            \"summary\": false,\r\n            \"audited\": false,\r\n            \"persisted\": true,\r\n            \"unique\": false,\r\n            \"filter\": true\r\n        }\r\n    ],\r\n    \"actions\": []\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/cet/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"cet",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check CFT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/entity/cftMIssingParam",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"cftMIssingParam"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove CET with missing param after",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/entity/cetMIssingParam",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"cetMIssingParam"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove CFT with missing param after",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/entity/cftMIssingParam",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"cftMIssingParam"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CET Reference",
					"item": [
						{
							"name": "Remove CET 1",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/entity/CetReference",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"CetReference"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove CET 2",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/entity/CetReferenceDeux",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"CetReferenceDeux"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove CET 3",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/entity/CetReferenceTrois",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"CetReferenceTrois"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Module before",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module/ReferenceCetModule?DeleteFiles=true",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module",
										"ReferenceCetModule"
									],
									"query": [
										{
											"key": "DeleteFiles",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Module Creation",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"active\" : true,\r\n  \"code\" : \"ReferenceCetModule\",\r\n  \"description\" : \"Module for cet's reference\",\r\n  \"license\" : \"GPL\",\r\n  \"currentVersion\" : \"1.0\",\r\n  \"transient\" : true,\r\n  \"inDraft\" : true,\r\n  \"codeOnly\" : false,\r\n  \"moduleItems\" : [ {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n    \"dtoData\" : {\r\n      \"code\" : \"CetReferenceTrois\",\r\n      \"name\" : \"CetReferenceTrois\",\r\n      \"availableStorages\" : [ \"SQL\" ],\r\n      \"sqlStorageConfiguration\" : {\r\n        \"storeAsTable\" : true\r\n      },\r\n      \"samples\" : [ ],\r\n      \"audited\" : false,\r\n      \"fields\" : [ {\r\n        \"code\" : \"FieldReferenceTrois\",\r\n        \"description\" : \"Field for reference\",\r\n        \"fieldType\" : \"ENTITY\",\r\n        \"accountLevel\" : \"CE_CetReferenceTrois\",\r\n        \"appliesTo\" : \"CE_CetReferenceTrois\",\r\n        \"useInheritedAsDefaultValue\" : false,\r\n        \"storageType\" : \"SINGLE\",\r\n        \"valueRequired\" : false,\r\n        \"versionable\" : false,\r\n        \"triggerEndPeriodEvent\" : false,\r\n        \"entityClazz\" : \"org.meveo.model.customEntities.CustomEntityTemplate - CetReference\",\r\n        \"listValues\" : { },\r\n        \"allowEdit\" : true,\r\n        \"hideOnNew\" : false,\r\n        \"contentTypes\" : [ ],\r\n        \"fileExtensions\" : [ ],\r\n        \"saveOnExplorer\" : false,\r\n        \"guiPosition\" : \"tab:CetReferenceTrois:0;field:0\",\r\n        \"identifier\" : false,\r\n        \"storages\" : [ \"SQL\" ],\r\n        \"samples\" : [ ],\r\n        \"summary\" : false,\r\n        \"audited\" : false,\r\n        \"persisted\" : true,\r\n        \"filter\" : true,\r\n        \"unique\" : false,\r\n        \"entityClazzCetCode\" : \"CetReference\",\r\n        \"matrixColumns\" : [ ]\r\n      } ],\r\n      \"actions\" : [ ]\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n    \"dtoData\" : {\r\n      \"code\" : \"CetReference\",\r\n      \"name\" : \"CetReference\",\r\n      \"availableStorages\" : [ \"SQL\" ],\r\n      \"sqlStorageConfiguration\" : {\r\n        \"storeAsTable\" : true\r\n      },\r\n      \"samples\" : [ ],\r\n      \"audited\" : false,\r\n      \"fields\" : [ {\r\n        \"code\" : \"FieldReferenceDeux\",\r\n        \"description\" : \"Field for reference\",\r\n        \"fieldType\" : \"ENTITY\",\r\n        \"accountLevel\" : \"CE_CetReference\",\r\n        \"appliesTo\" : \"CE_CetReference\",\r\n        \"useInheritedAsDefaultValue\" : false,\r\n        \"storageType\" : \"SINGLE\",\r\n        \"valueRequired\" : false,\r\n        \"versionable\" : false,\r\n        \"triggerEndPeriodEvent\" : false,\r\n        \"entityClazz\" : \"org.meveo.model.customEntities.CustomEntityTemplate - CetReferenceDeux\",\r\n        \"listValues\" : { },\r\n        \"allowEdit\" : true,\r\n        \"hideOnNew\" : false,\r\n        \"contentTypes\" : [ ],\r\n        \"fileExtensions\" : [ ],\r\n        \"saveOnExplorer\" : false,\r\n        \"guiPosition\" : \"tab:CetReference:0;field:0\",\r\n        \"identifier\" : false,\r\n        \"storages\" : [ \"SQL\" ],\r\n        \"samples\" : [ ],\r\n        \"summary\" : false,\r\n        \"audited\" : false,\r\n        \"persisted\" : true,\r\n        \"filter\" : true,\r\n        \"unique\" : false,\r\n        \"entityClazzCetCode\" : \"CetReferenceDeux\",\r\n        \"matrixColumns\" : [ ]\r\n      } ],\r\n      \"actions\" : [ ]\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n    \"dtoData\" : {\r\n      \"code\" : \"CetReferenceDeux\",\r\n      \"name\" : \"CetReferenceDeux\",\r\n      \"availableStorages\" : [ \"SQL\" ],\r\n      \"sqlStorageConfiguration\" : {\r\n        \"storeAsTable\" : true\r\n      },\r\n      \"samples\" : [ ],\r\n      \"audited\" : false,\r\n      \"fields\" : [ {\r\n        \"code\" : \"FieldReferenceTrois\",\r\n        \"description\" : \"Field for reference\",\r\n        \"fieldType\" : \"ENTITY\",\r\n        \"accountLevel\" : \"CE_CetReferenceDeux\",\r\n        \"appliesTo\" : \"CE_CetReferenceDeux\",\r\n        \"useInheritedAsDefaultValue\" : false,\r\n        \"storageType\" : \"SINGLE\",\r\n        \"valueRequired\" : false,\r\n        \"versionable\" : false,\r\n        \"triggerEndPeriodEvent\" : false,\r\n        \"entityClazz\" : \"org.meveo.model.customEntities.CustomEntityTemplate - CetReferenceTrois\",\r\n        \"listValues\" : { },\r\n        \"allowEdit\" : true,\r\n        \"hideOnNew\" : false,\r\n        \"contentTypes\" : [ ],\r\n        \"fileExtensions\" : [ ],\r\n        \"saveOnExplorer\" : false,\r\n        \"guiPosition\" : \"tab:CetReferenceDeux:0;field:0\",\r\n        \"identifier\" : false,\r\n        \"storages\" : [ \"SQL\" ],\r\n        \"samples\" : [ ],\r\n        \"summary\" : false,\r\n        \"audited\" : false,\r\n        \"persisted\" : true,\r\n        \"filter\" : true,\r\n        \"unique\" : false,\r\n        \"entityClazzCetCode\" : \"CetReferenceTrois\",\r\n        \"matrixColumns\" : [ ]\r\n      } ],\r\n      \"actions\" : [ ]\r\n    }\r\n  } ],\r\n  \"moduleDependencies\" : [ ],\r\n  \"moduleFiles\" : [ ]\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Install Module",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"active\" : true,\r\n  \"code\" : \"ReferenceCetModule\",\r\n  \"description\" : \"Module for cet's reference\",\r\n  \"license\" : \"GPL\",\r\n  \"currentVersion\" : \"1.0\",\r\n  \"transient\" : true,\r\n  \"inDraft\" : true,\r\n  \"codeOnly\" : false,\r\n  \"moduleItems\" : [ {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n    \"dtoData\" : {\r\n      \"code\" : \"CetReferenceTrois\",\r\n      \"name\" : \"CetReferenceTrois\",\r\n      \"availableStorages\" : [ \"SQL\" ],\r\n      \"sqlStorageConfiguration\" : {\r\n        \"storeAsTable\" : true\r\n      },\r\n      \"samples\" : [ ],\r\n      \"audited\" : false,\r\n      \"fields\" : [ {\r\n        \"code\" : \"FieldReferenceTrois\",\r\n        \"description\" : \"Field for reference\",\r\n        \"fieldType\" : \"ENTITY\",\r\n        \"accountLevel\" : \"CE_CetReferenceTrois\",\r\n        \"appliesTo\" : \"CE_CetReferenceTrois\",\r\n        \"useInheritedAsDefaultValue\" : false,\r\n        \"storageType\" : \"SINGLE\",\r\n        \"valueRequired\" : false,\r\n        \"versionable\" : false,\r\n        \"triggerEndPeriodEvent\" : false,\r\n        \"entityClazz\" : \"org.meveo.model.customEntities.CustomEntityTemplate - CetReference\",\r\n        \"listValues\" : { },\r\n        \"allowEdit\" : true,\r\n        \"hideOnNew\" : false,\r\n        \"contentTypes\" : [ ],\r\n        \"fileExtensions\" : [ ],\r\n        \"saveOnExplorer\" : false,\r\n        \"guiPosition\" : \"tab:CetReferenceTrois:0;field:0\",\r\n        \"identifier\" : false,\r\n        \"storages\" : [ \"SQL\" ],\r\n        \"samples\" : [ ],\r\n        \"summary\" : false,\r\n        \"audited\" : false,\r\n        \"persisted\" : true,\r\n        \"filter\" : true,\r\n        \"unique\" : false,\r\n        \"entityClazzCetCode\" : \"CetReference\",\r\n        \"matrixColumns\" : [ ]\r\n      } ],\r\n      \"actions\" : [ ]\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n    \"dtoData\" : {\r\n      \"code\" : \"CetReference\",\r\n      \"name\" : \"CetReference\",\r\n      \"availableStorages\" : [ \"SQL\" ],\r\n      \"sqlStorageConfiguration\" : {\r\n        \"storeAsTable\" : true\r\n      },\r\n      \"samples\" : [ ],\r\n      \"audited\" : false,\r\n      \"fields\" : [ {\r\n        \"code\" : \"FieldReferenceDeux\",\r\n        \"description\" : \"Field for reference\",\r\n        \"fieldType\" : \"ENTITY\",\r\n        \"accountLevel\" : \"CE_CetReference\",\r\n        \"appliesTo\" : \"CE_CetReference\",\r\n        \"useInheritedAsDefaultValue\" : false,\r\n        \"storageType\" : \"SINGLE\",\r\n        \"valueRequired\" : false,\r\n        \"versionable\" : false,\r\n        \"triggerEndPeriodEvent\" : false,\r\n        \"entityClazz\" : \"org.meveo.model.customEntities.CustomEntityTemplate - CetReferenceDeux\",\r\n        \"listValues\" : { },\r\n        \"allowEdit\" : true,\r\n        \"hideOnNew\" : false,\r\n        \"contentTypes\" : [ ],\r\n        \"fileExtensions\" : [ ],\r\n        \"saveOnExplorer\" : false,\r\n        \"guiPosition\" : \"tab:CetReference:0;field:0\",\r\n        \"identifier\" : false,\r\n        \"storages\" : [ \"SQL\" ],\r\n        \"samples\" : [ ],\r\n        \"summary\" : false,\r\n        \"audited\" : false,\r\n        \"persisted\" : true,\r\n        \"filter\" : true,\r\n        \"unique\" : false,\r\n        \"entityClazzCetCode\" : \"CetReferenceDeux\",\r\n        \"matrixColumns\" : [ ]\r\n      } ],\r\n      \"actions\" : [ ]\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n    \"dtoData\" : {\r\n      \"code\" : \"CetReferenceDeux\",\r\n      \"name\" : \"CetReferenceDeux\",\r\n      \"availableStorages\" : [ \"SQL\" ],\r\n      \"sqlStorageConfiguration\" : {\r\n        \"storeAsTable\" : true\r\n      },\r\n      \"samples\" : [ ],\r\n      \"audited\" : false,\r\n      \"fields\" : [ {\r\n        \"code\" : \"FieldReferenceTrois\",\r\n        \"description\" : \"Field for reference\",\r\n        \"fieldType\" : \"ENTITY\",\r\n        \"accountLevel\" : \"CE_CetReferenceDeux\",\r\n        \"appliesTo\" : \"CE_CetReferenceDeux\",\r\n        \"useInheritedAsDefaultValue\" : false,\r\n        \"storageType\" : \"SINGLE\",\r\n        \"valueRequired\" : false,\r\n        \"versionable\" : false,\r\n        \"triggerEndPeriodEvent\" : false,\r\n        \"entityClazz\" : \"org.meveo.model.customEntities.CustomEntityTemplate - CetReferenceTrois\",\r\n        \"listValues\" : { },\r\n        \"allowEdit\" : true,\r\n        \"hideOnNew\" : false,\r\n        \"contentTypes\" : [ ],\r\n        \"fileExtensions\" : [ ],\r\n        \"saveOnExplorer\" : false,\r\n        \"guiPosition\" : \"tab:CetReferenceDeux:0;field:0\",\r\n        \"identifier\" : false,\r\n        \"storages\" : [ \"SQL\" ],\r\n        \"samples\" : [ ],\r\n        \"summary\" : false,\r\n        \"audited\" : false,\r\n        \"persisted\" : true,\r\n        \"filter\" : true,\r\n        \"unique\" : false,\r\n        \"entityClazzCetCode\" : \"CetReferenceTrois\",\r\n        \"matrixColumns\" : [ ]\r\n      } ],\r\n      \"actions\" : [ ]\r\n    }\r\n  } ],\r\n  \"moduleDependencies\" : [ ],\r\n  \"moduleFiles\" : [ ]\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module/install",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module",
										"install"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create CEI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"ceiReference\",\n    \"description\": \"test\",\n    \"cetCode\": \"CetReference\",\n    \"disabled\": false,\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"FieldReferenceDeux\",\n                \"stringValue\": \"ENTITY\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customEntityInstance/CetReference/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"customEntityInstance",
										"CetReference",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete CEI ",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"ceiReference\",\n    \"description\": \"test\",\n    \"cetCode\": \"CetReference\",\n    \"disabled\": false,\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"FieldReferenceDeux\",\n                \"stringValue\": \"ENTITY\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/customEntityInstance/CetReference/ceiReference",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"customEntityInstance",
										"CetReference",
										"ceiReference"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Module after",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module/ReferenceCetModule?DeleteFiles=true",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module",
										"ReferenceCetModule"
									],
									"query": [
										{
											"key": "DeleteFiles",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CEI & CET Installation",
					"item": [
						{
							"name": "Remove ModuleInstall before",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module/ModuleInstall?deleteFiles=true",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module",
										"ModuleInstall"
									],
									"query": [
										{
											"key": "deleteFiles",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove git repository before",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.expect(pm.response.code).to.be.oneOf([204]); "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/git/repositories/ModuleInstall",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"git",
										"repositories",
										"ModuleInstall"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove CET before",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/entity/ceicetInstall",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"ceicetInstall"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get git repository",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"code\": \"ModuleInstall\",\r\n        \"readingRoles\": [],\r\n        \"writingRoles\": [],\r\n        \"remoteOrigin\": \"https://github.com/meveo-org/TU-ModuleInstallation\",\r\n        \"meveoRepository\": false,\r\n        \"defaultBranch\": \"main\",\r\n        \"locked\": false,\r\n        \"currentBranch\": \"main\",\r\n        \"branches\": [\r\n            \"main\"\r\n        ]\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/git/repositories?username=&password=&branch=main",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"git",
										"repositories"
									],
									"query": [
										{
											"key": "username",
											"value": ""
										},
										{
											"key": "password",
											"value": ""
										},
										{
											"key": "branch",
											"value": "main"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Instal from git repository link",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module/install/from/git/:code",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module",
										"install",
										"from",
										"git",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "ModuleInstall"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get module installed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches values\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.module.code).to.eql(\"ModuleInstall\");\r",
											"    pm.expect(jsonData.module.moduleItems[0].dtoData.code).to.eql(\"ceicetInstall\");\r",
											"    pm.expect(jsonData.module.moduleItems[0].dtoData.fields[0].code).to.eql(\"fieldCei\");\r",
											"    pm.expect(jsonData.module.moduleItems[1].dtoData.code).to.eql(\"671363e6-1d55-418b-865e-8d19019e880d\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module?code=ModuleInstall",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module"
									],
									"query": [
										{
											"key": "code",
											"value": "ModuleInstall"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove ModuleInstall after",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module/ModuleInstall?deleteFiles=true",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module",
										"ModuleInstall"
									],
									"query": [
										{
											"key": "deleteFiles",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove git repository after",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.expect(pm.response.code).to.be.oneOf([204]); "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/git/repositories/ModuleInstall",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"git",
										"repositories",
										"ModuleInstall"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove CET before after",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/entityCustomization/entity/ceicetInstall",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"entityCustomization",
										"entity",
										"ceicetInstall"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Module install",
					"item": [
						{
							"name": "Delete Module before",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module/BigModule?DeleteFiles=true",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module",
										"BigModule"
									],
									"query": [
										{
											"key": "DeleteFiles",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Install Module",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"active\" : true,\r\n  \"code\" : \"BigModule\",\r\n  \"description\" : \"Module with a lot of things\",\r\n  \"license\" : \"GPL\",\r\n  \"currentVersion\" : \"1.0\",\r\n  \"inDraft\" : true,\r\n  \"codeOnly\" : false,\r\n  \"transient\" : true,\r\n  \"moduleItems\" : [ {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.notification.ScriptNotificationDto\",\r\n    \"dtoData\" : {\r\n      \"active\" : true,\r\n      \"code\" : \"Time\",\r\n      \"classNameFilter\" : \"org.meveo.model.catalog.Calendar\",\r\n      \"eventTypeFilter\" : \"REMOVED\",\r\n      \"scriptInstanceCode\" : \"org.meveo.script.InstanciateProxy\",\r\n      \"scriptParams\" : {\r\n        \"Hours\" : \"12\"\r\n      },\r\n      \"priority\" : 1\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n    \"dtoData\" : {\r\n      \"code\" : \"cetRefF\",\r\n      \"name\" : \"cetRefF\",\r\n      \"customEntityCategoryCode\" : \"ClassicEntity\",\r\n      \"availableStorages\" : [ \"SQL\" ],\r\n      \"sqlStorageConfiguration\" : {\r\n        \"storeAsTable\" : true\r\n      },\r\n      \"samples\" : [ ],\r\n      \"audited\" : false,\r\n      \"fields\" : [ {\r\n        \"code\" : \"FieldInstance\",\r\n        \"description\" : \"Field for cei\",\r\n        \"fieldType\" : \"STRING\",\r\n        \"accountLevel\" : \"CE_cetRefF\",\r\n        \"appliesTo\" : \"CE_cetRefF\",\r\n        \"useInheritedAsDefaultValue\" : false,\r\n        \"storageType\" : \"SINGLE\",\r\n        \"valueRequired\" : false,\r\n        \"versionable\" : false,\r\n        \"triggerEndPeriodEvent\" : false,\r\n        \"listValues\" : { },\r\n        \"allowEdit\" : true,\r\n        \"hideOnNew\" : false,\r\n        \"maxValue\" : 255,\r\n        \"contentTypes\" : [ ],\r\n        \"fileExtensions\" : [ ],\r\n        \"saveOnExplorer\" : false,\r\n        \"guiPosition\" : \"tab:cetRefF:0;field:0\",\r\n        \"identifier\" : false,\r\n        \"storages\" : [ \"SQL\" ],\r\n        \"samples\" : [ ],\r\n        \"summary\" : true,\r\n        \"audited\" : false,\r\n        \"persisted\" : true,\r\n        \"filter\" : true,\r\n        \"unique\" : false,\r\n        \"matrixColumns\" : [ ]\r\n      } ],\r\n      \"actions\" : [ ]\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.technicalservice.endpoint.EndpointDto\",\r\n    \"dtoData\" : {\r\n      \"code\" : \"ActiationProxy\",\r\n      \"description\" : \"Endpoint for proxy's activation\",\r\n      \"secured\" : true,\r\n      \"checkPathParams\" : true,\r\n      \"serviceCode\" : \"org.meveo.script.InstanciateProxy\",\r\n      \"synchronous\" : true,\r\n      \"method\" : \"POST\",\r\n      \"parameterMappings\" : [ ],\r\n      \"pathParameters\" : [ ],\r\n      \"roles\" : [ ],\r\n      \"serializeResult\" : false,\r\n      \"contentType\" : \"application/json\",\r\n      \"basePath\" : \"ActiationProxy\",\r\n      \"path\" : \"/\"\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.CustomRelationshipTemplateDto\",\r\n    \"dtoData\" : {\r\n      \"code\" : \"cetRefence\",\r\n      \"name\" : \"cetRefence\",\r\n      \"description\" : \"Relation with reference cet\",\r\n      \"startNodeCode\" : \"cetRefF\",\r\n      \"endNodeCode\" : \"cetRefS\",\r\n      \"startNodeKeys\" : [ ],\r\n      \"endNodeKeys\" : [ ],\r\n      \"availableStorages\" : [ \"SQL\" ],\r\n      \"audited\" : false,\r\n      \"unique\" : false,\r\n      \"fields\" : [ {\r\n        \"code\" : \"DataValue\",\r\n        \"description\" : \"String with data value\",\r\n        \"fieldType\" : \"STRING\",\r\n        \"accountLevel\" : \"CRT_cetRefence\",\r\n        \"appliesTo\" : \"CRT_cetRefence\",\r\n        \"useInheritedAsDefaultValue\" : false,\r\n        \"storageType\" : \"SINGLE\",\r\n        \"valueRequired\" : false,\r\n        \"versionable\" : false,\r\n        \"triggerEndPeriodEvent\" : false,\r\n        \"listValues\" : { },\r\n        \"allowEdit\" : true,\r\n        \"hideOnNew\" : false,\r\n        \"maxValue\" : 255,\r\n        \"contentTypes\" : [ ],\r\n        \"fileExtensions\" : [ ],\r\n        \"saveOnExplorer\" : false,\r\n        \"guiPosition\" : \"tab:cetRefence:0;field:0\",\r\n        \"identifier\" : false,\r\n        \"storages\" : [ \"SQL\" ],\r\n        \"samples\" : [ ],\r\n        \"summary\" : true,\r\n        \"audited\" : false,\r\n        \"persisted\" : true,\r\n        \"filter\" : true,\r\n        \"unique\" : false,\r\n        \"matrixColumns\" : [ ]\r\n      } ]\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.notification.JobTriggerDto\",\r\n    \"dtoData\" : {\r\n      \"active\" : true,\r\n      \"code\" : \"ProxyCreation\",\r\n      \"classNameFilter\" : \"org.meveo.model.scripts.ScriptInstance\",\r\n      \"eventTypeFilter\" : \"UPDATED\",\r\n      \"scriptInstanceCode\" : \"org.meveo.script.InstanciateProxy\",\r\n      \"scriptParams\" : { },\r\n      \"priority\" : 1,\r\n      \"jobParams\" : { },\r\n      \"jobInstance\" : \"LanchProxy\"\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.CustomEntityTemplateDto\",\r\n    \"dtoData\" : {\r\n      \"code\" : \"cetRefS\",\r\n      \"name\" : \"cetRefS\",\r\n      \"description\" : \"cet with reference\",\r\n      \"customEntityCategoryCode\" : \"ClassicEntity\",\r\n      \"availableStorages\" : [ \"SQL\" ],\r\n      \"sqlStorageConfiguration\" : {\r\n        \"storeAsTable\" : true\r\n      },\r\n      \"samples\" : [ ],\r\n      \"audited\" : false,\r\n      \"fields\" : [ {\r\n        \"code\" : \"FieldLong\",\r\n        \"description\" : \"Field for Long value\",\r\n        \"fieldType\" : \"LONG\",\r\n        \"accountLevel\" : \"CE_cetRefS\",\r\n        \"appliesTo\" : \"CE_cetRefS\",\r\n        \"useInheritedAsDefaultValue\" : false,\r\n        \"storageType\" : \"SINGLE\",\r\n        \"valueRequired\" : false,\r\n        \"versionable\" : false,\r\n        \"triggerEndPeriodEvent\" : false,\r\n        \"listValues\" : { },\r\n        \"allowEdit\" : true,\r\n        \"hideOnNew\" : false,\r\n        \"contentTypes\" : [ ],\r\n        \"fileExtensions\" : [ ],\r\n        \"saveOnExplorer\" : false,\r\n        \"guiPosition\" : \"tab:cetRefS:0;field:0\",\r\n        \"identifier\" : false,\r\n        \"storages\" : [ \"SQL\" ],\r\n        \"samples\" : [ ],\r\n        \"summary\" : false,\r\n        \"audited\" : false,\r\n        \"persisted\" : true,\r\n        \"filter\" : true,\r\n        \"unique\" : false,\r\n        \"matrixColumns\" : [ ]\r\n      } ],\r\n      \"actions\" : [ ]\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.job.JobInstanceDto\",\r\n    \"dtoData\" : {\r\n      \"active\" : true,\r\n      \"code\" : \"LanchProxy\",\r\n      \"jobCategory\" : \"TEST\",\r\n      \"jobTemplate\" : \"FunctionTestJob\",\r\n      \"timerCode\" : \"Daily-midnight\",\r\n      \"limitToSingleNode\" : true\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.ScriptInstanceDto\",\r\n    \"dtoData\" : {\r\n      \"active\" : true,\r\n      \"code\" : \"org.meveo.script.InstanciateProxy\",\r\n      \"inputs\" : [ ],\r\n      \"outputs\" : [ ],\r\n      \"generateOutputs\" : false,\r\n      \"type\" : \"JAVA\",\r\n      \"transactionType\" : \"SAME\",\r\n      \"script\" : \"package org.meveo.script;\\r\\n\\r\\nimport java.util.Map;\\r\\n\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\n\\r\\npublic class InstanciateProxy extends Script {\\r\\n\\t\\r\\n\\t@Override\\r\\n\\tpublic void execute(Map<String, Object> parameters) throws BusinessException {\\r\\n\\t\\tsuper.execute(parameters);\\r\\n\\t}\\r\\n\\t\\r\\n}\",\r\n      \"executionRoles\" : [ ],\r\n      \"sourcingRoles\" : [ ],\r\n      \"mavenDependencies\" : [ ],\r\n      \"importScriptInstances\" : [ ]\r\n    }\r\n  }, {\r\n    \"dtoClassName\" : \"org.meveo.api.dto.CustomEntityCategoryDto\",\r\n    \"dtoData\" : {\r\n      \"code\" : \"ClassicEntity\",\r\n      \"name\" : \"ClassicEntity\"\r\n    }\r\n  } ],\r\n  \"moduleDependencies\" : [ ],\r\n  \"moduleFiles\" : [ ]\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module/install",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module",
										"install"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Module",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module?code=BigModule",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module"
									],
									"query": [
										{
											"key": "code",
											"value": "BigModule"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Module after",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module/BigModule?deleteFiles=true",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module",
										"BigModule"
									],
									"query": [
										{
											"key": "deleteFiles",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Module",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{root}}/api/rest/module?code=BigModule",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{root}}",
										"api",
										"rest",
										"module"
									],
									"query": [
										{
											"key": "code",
											"value": "BigModule"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "#Before execute\n\nMakes sure that there are no more entity from the module created in meveo"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response code should be above 200\", function() {",
					"   pm.expect(pm.response.code).to.be.oneOf([102,200,201,202,204,400,403,404,409]); ",
					"});"
				]
			}
		}
	]
}