{
	"info": {
		"_postman_id": "a9612353-bfda-4d8b-8701-76ae4ba09dec",
		"name": "Scripts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.get(\"variable_key\");",
									"var json = pm.response.json();",
									"var token = json[\"access_token\"];",
									"var refreshToken = json[\"refresh_token\"]",
									"pm.environment.set(\"access_token\", token);",
									"pm.environment.set(\"refresh_token\", refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{keycloakClientId}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{keycloakUsername}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{keycloakPassword}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{keycloakClientSecret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{keycloakHostname}}:443/auth/realms/{{webContext}}/protocol/openid-connect/token",
							"protocol": "https",
							"host": [
								"{{keycloakHostname}}"
							],
							"port": "443",
							"path": [
								"auth",
								"realms",
								"{{webContext}}",
								"protocol",
								"openid-connect",
								"token"
							]
						},
						"description": "Request Keycloak and get auth token"
					},
					"response": []
				}
			]
		},
		{
			"name": "CDI Integration",
			"item": [
				{
					"name": "External lib injection",
					"item": [
						{
							"name": "Create script with external lib injected",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\" : \"org.meveo.script.DefaultScriptCDI\",\r\n    \"type\": \"JAVA\",\r\n    \"script\" : \"package org.meveo.script;\\r\\n\\r\\nimport java.util.Map;\\r\\n\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport org.slf4j.Logger;\\r\\nimport javax.inject.Inject;\\r\\nimport javax.enterprise.context.ApplicationScoped;\\r\\n\\r\\npublic class DefaultScriptCDI extends Script {\\r\\n  \\r\\n    @Inject\\r\\n  \\tprivate Logger log;\\r\\n  \\r\\n  \\tprivate int count = 12;\\r\\n\\t\\r\\n\\t@Override\\r\\n\\tpublic void execute(Map<String, Object> parameters) throws BusinessException {\\r\\n\\t\\tsuper.execute(parameters);\\r\\n      \\tcount++;\\r\\n      \\tlog.info(\\\"toto23 : \\\" + count);\\r\\n      \\tSystem.out.println(\\\"toto3 : \\\" + count);\\r\\n\\t}\\r\\n  \\r\\n    public int getCount() {\\r\\n      return count;\\r\\n    }\\r\\n      \\r\\n\\t\\r\\n}\"\r\n    \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/scriptInstance/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"scriptInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Test script run without error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});",
											"",
											"pm.test(\"body return check\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.count).to.eql(13);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/function/org.meveo.script.DefaultScriptCDI/test",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"function",
										"org.meveo.script.DefaultScriptCDI",
										"test"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Script injection",
					"item": [
						{
							"name": "Create script with other script injected",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\" : \"org.meveo.script.DefaultScriptCDI2\",\r\n    \"type\": \"JAVA\",\r\n    \"script\" : \"package org.meveo.script;\\r\\n\\r\\nimport java.util.Map;\\r\\n\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport javax.inject.*;\\r\\nimport javax.enterprise.inject.*;\\r\\nimport org.meveo.script.DefaultScriptCDI;\\r\\n\\r\\npublic class DefaultScriptCDI2 extends Script {\\r\\n  \\r\\n  \\t@Inject\\r\\n  \\t@Any\\r\\n  \\tprivate DefaultScriptCDI sc;\\r\\n\\t\\r\\n\\t@Override\\r\\n\\tpublic void execute(Map<String, Object> parameters) throws BusinessException {\\r\\n\\t\\tsc.execute(parameters);\\r\\n\\t}\\r\\n  \\r\\n    public int getCount() {\\r\\n      return sc.getCount();\\r\\n    }\\r\\n\\t\\r\\n}\"\r\n    \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/scriptInstance/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"scriptInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Test script run without error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"",
											"});",
											"",
											"pm.test(\"body return check\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.count).to.eql(13);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/function/org.meveo.script.DefaultScriptCDI2/test",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"function",
										"org.meveo.script.DefaultScriptCDI2",
										"test"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Hot code change",
					"item": [
						{
							"name": "Update script with external lib injected",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\" : \"org.meveo.script.DefaultScriptCDI\",\r\n    \"type\": \"JAVA\",\r\n    \"script\" : \"package org.meveo.script;\\r\\n\\r\\nimport java.util.Map;\\r\\n\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport org.slf4j.Logger;\\r\\nimport javax.inject.Inject;\\r\\nimport javax.enterprise.context.ApplicationScoped;\\r\\n\\r\\npublic class DefaultScriptCDI extends Script {\\r\\n  \\r\\n    @Inject\\r\\n  \\tprivate Logger log;\\r\\n  \\r\\n  \\tprivate int count = 13;\\r\\n\\t\\r\\n\\t@Override\\r\\n\\tpublic void execute(Map<String, Object> parameters) throws BusinessException {\\r\\n\\t\\tsuper.execute(parameters);\\r\\n      \\tcount++;\\r\\n      \\tlog.info(\\\"toto23 : \\\" + count);\\r\\n      \\tSystem.out.println(\\\"toto3 : \\\" + count);\\r\\n\\t}\\r\\n  \\r\\n    public int getCount() {\\r\\n      return count;\\r\\n    }\\r\\n      \\r\\n\\t\\r\\n}\"\r\n    \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/scriptInstance/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"scriptInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Run script that depends on the previous script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"",
											"});",
											"",
											"pm.test(\"body return check\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.count).to.eql(14);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/function/org.meveo.script.DefaultScriptCDI2/test",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"function",
										"org.meveo.script.DefaultScriptCDI2",
										"test"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Application scope",
					"item": [
						{
							"name": "Update script with external lib injected to make it app scoped",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\" : \"org.meveo.script.DefaultScriptCDI\",\r\n    \"type\": \"JAVA\",\r\n    \"script\" : \"package org.meveo.script;\\r\\n\\r\\nimport java.util.Map;\\r\\n\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport org.slf4j.Logger;\\r\\nimport javax.inject.Inject;\\r\\nimport javax.enterprise.context.ApplicationScoped;\\r\\n\\r\\n@ApplicationScoped\\npublic class DefaultScriptCDI extends Script {\\r\\n  \\r\\n    @Inject\\r\\n  \\tprivate Logger log;\\r\\n  \\r\\n  \\tprivate int count = 13;\\r\\n\\t\\r\\n\\t@Override\\r\\n\\tpublic void execute(Map<String, Object> parameters) throws BusinessException {\\r\\n\\t\\tsuper.execute(parameters);\\r\\n      \\tcount++;\\r\\n      \\tlog.info(\\\"toto23 : \\\" + count);\\r\\n      \\tSystem.out.println(\\\"toto3 : \\\" + count);\\r\\n\\t}\\r\\n  \\r\\n    public int getCount() {\\r\\n      return count;\\r\\n    }\\r\\n      \\r\\n\\t\\r\\n}\"\r\n    \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/scriptInstance/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"scriptInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Run the script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"",
											"});",
											"",
											"pm.test(\"body return check\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.count).to.eql(14);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/function/org.meveo.script.DefaultScriptCDI/test",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"function",
										"org.meveo.script.DefaultScriptCDI",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Run the script bis",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"",
											"});",
											"",
											"pm.test(\"body return check\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.count).to.eql(15);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/function/org.meveo.script.DefaultScriptCDI/test",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"function",
										"org.meveo.script.DefaultScriptCDI",
										"test"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Request scope",
					"item": [
						{
							"name": "Update script with external lib injected to make it request scoped",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\" : \"org.meveo.script.DefaultScriptCDI\",\r\n    \"type\": \"JAVA\",\r\n    \"script\" : \"package org.meveo.script;\\r\\n\\r\\nimport java.util.Map;\\r\\n\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport org.slf4j.Logger;\\r\\nimport javax.inject.Inject;\\r\\nimport javax.enterprise.context.RequestScoped;\\r\\n\\r\\n@RequestScoped\\npublic class DefaultScriptCDI extends Script {\\r\\n  \\r\\n    @Inject\\r\\n  \\tprivate Logger log;\\r\\n  \\r\\n  \\tprivate int count = 13;\\r\\n\\t\\r\\n\\t@Override\\r\\n\\tpublic void execute(Map<String, Object> parameters) throws BusinessException {\\r\\n\\t\\tsuper.execute(parameters);\\r\\n      \\tcount++;\\r\\n      \\tlog.info(\\\"toto23 : \\\" + count);\\r\\n      \\tSystem.out.println(\\\"toto3 : \\\" + count);\\r\\n\\t}\\r\\n  \\r\\n    public int getCount() {\\r\\n      return count;\\r\\n    }\\r\\n      \\r\\n\\t\\r\\n}\"\r\n    \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/scriptInstance/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"scriptInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create script 3 that calls script 2 and script 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\" : \"org.meveo.script.DefaultScriptCDI3\",\r\n    \"type\": \"JAVA\",\r\n    \"script\" : \"package org.meveo.script;\\r\\n\\r\\nimport java.util.Map;\\r\\n\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport javax.inject.*;\\r\\nimport javax.enterprise.inject.*;\\r\\nimport org.meveo.script.DefaultScriptCDI;\\r\\n\\r\\npublic class DefaultScriptCDI3 extends Script {\\r\\n  \\r\\n  \\t@Inject\\r\\n  \\t@Any\\r\\n  \\tprivate DefaultScriptCDI sc;\\r\\n\\r\\n        @Inject\\r\\n  \\t@Any\\r\\n  \\tprivate DefaultScriptCDI2 sc2;\\r\\n\\r\\n\\t\\r\\n\\t@Override\\r\\n\\tpublic void execute(Map<String, Object> parameters) throws BusinessException {\\r\\n\\t\\tsc.execute(parameters);\\r\\n                sc2.execute(parameters);\\r\\n\\t}\\r\\n  \\r\\n    public int getCount() {\\r\\n      return sc.getCount();\\r\\n    }\\r\\n\\t\\r\\n}\"\r\n    \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/scriptInstance/createOrUpdate",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"scriptInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Run script 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"",
											"});",
											"",
											"pm.test(\"body return check\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.count).to.eql(15);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/function/org.meveo.script.DefaultScriptCDI3/test",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"function",
										"org.meveo.script.DefaultScriptCDI3",
										"test"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Clean data",
					"item": [
						{
							"name": "Delete script 1",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\" : \"org.meveo.script.DefaultScriptCDI\",\r\n    \"type\": \"JAVA\",\r\n    \"script\" : \"package org.meveo.script;\\r\\n\\r\\nimport java.util.Map;\\r\\n\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport org.slf4j.Logger;\\r\\nimport javax.inject.Inject;\\r\\nimport javax.enterprise.context.ApplicationScoped;\\r\\n\\r\\npublic class DefaultScriptCDI extends Script {\\r\\n  \\r\\n    @Inject\\r\\n  \\tprivate Logger log;\\r\\n  \\r\\n  \\tprivate int count = 12;\\r\\n\\t\\r\\n\\t@Override\\r\\n\\tpublic void execute(Map<String, Object> parameters) throws BusinessException {\\r\\n\\t\\tsuper.execute(parameters);\\r\\n      \\tcount++;\\r\\n      \\tlog.info(\\\"toto23 : \\\" + count);\\r\\n      \\tSystem.out.println(\\\"toto3 : \\\" + count);\\r\\n\\t}\\r\\n  \\r\\n    public int getCount() {\\r\\n      return count;\\r\\n    }\\r\\n      \\r\\n\\t\\r\\n}\"\r\n    \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/scriptInstance/org.meveo.script.DefaultScriptCDI",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"scriptInstance",
										"org.meveo.script.DefaultScriptCDI"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete script 2",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\" : \"org.meveo.script.DefaultScriptCDI\",\r\n    \"type\": \"JAVA\",\r\n    \"script\" : \"package org.meveo.script;\\r\\n\\r\\nimport java.util.Map;\\r\\n\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport org.slf4j.Logger;\\r\\nimport javax.inject.Inject;\\r\\nimport javax.enterprise.context.ApplicationScoped;\\r\\n\\r\\npublic class DefaultScriptCDI extends Script {\\r\\n  \\r\\n    @Inject\\r\\n  \\tprivate Logger log;\\r\\n  \\r\\n  \\tprivate int count = 12;\\r\\n\\t\\r\\n\\t@Override\\r\\n\\tpublic void execute(Map<String, Object> parameters) throws BusinessException {\\r\\n\\t\\tsuper.execute(parameters);\\r\\n      \\tcount++;\\r\\n      \\tlog.info(\\\"toto23 : \\\" + count);\\r\\n      \\tSystem.out.println(\\\"toto3 : \\\" + count);\\r\\n\\t}\\r\\n  \\r\\n    public int getCount() {\\r\\n      return count;\\r\\n    }\\r\\n      \\r\\n\\t\\r\\n}\"\r\n    \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/scriptInstance/org.meveo.script.DefaultScriptCDI2",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"scriptInstance",
										"org.meveo.script.DefaultScriptCDI2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete script 3",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{keycloakPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{keycloakUsername}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\" : \"org.meveo.script.DefaultScriptCDI\",\r\n    \"type\": \"JAVA\",\r\n    \"script\" : \"package org.meveo.script;\\r\\n\\r\\nimport java.util.Map;\\r\\n\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport org.slf4j.Logger;\\r\\nimport javax.inject.Inject;\\r\\nimport javax.enterprise.context.ApplicationScoped;\\r\\n\\r\\npublic class DefaultScriptCDI extends Script {\\r\\n  \\r\\n    @Inject\\r\\n  \\tprivate Logger log;\\r\\n  \\r\\n  \\tprivate int count = 12;\\r\\n\\t\\r\\n\\t@Override\\r\\n\\tpublic void execute(Map<String, Object> parameters) throws BusinessException {\\r\\n\\t\\tsuper.execute(parameters);\\r\\n      \\tcount++;\\r\\n      \\tlog.info(\\\"toto23 : \\\" + count);\\r\\n      \\tSystem.out.println(\\\"toto3 : \\\" + count);\\r\\n\\t}\\r\\n  \\r\\n    public int getCount() {\\r\\n      return count;\\r\\n    }\\r\\n      \\r\\n\\t\\r\\n}\"\r\n    \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/scriptInstance/org.meveo.script.DefaultScriptCDI3",
									"protocol": "{{protocol}}",
									"host": [
										"{{hostname}}"
									],
									"port": "{{port}}",
									"path": [
										"{{webContext}}",
										"api",
										"rest",
										"scriptInstance",
										"org.meveo.script.DefaultScriptCDI3"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}