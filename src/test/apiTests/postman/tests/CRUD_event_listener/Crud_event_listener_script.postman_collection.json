{
	"info": {
		"_postman_id": "3a30fe8b-e64c-42a5-a45d-847f6e8ad16a",
		"name": "Crud event listener script",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create CET",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{keycloakPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{keycloakUsername}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n          \"code\": \"CrudCetTest\",\r\n          \"name\": \"CrudCetTest\",\r\n          \"description\": \"CrudCetTest\",\r\n          \"availableStorages\": [\"SQL\"],\r\n          \"sqlStorageConfiguration\": {\r\n            \"storeAsTable\": true\r\n          },\r\n          \"samples\": [],\r\n          \"fields\": [\r\n            {\r\n              \"code\": \"value\",\r\n              \"description\": \"value\",\r\n              \"fieldType\": \"STRING\",\r\n              \"storageType\": \"SINGLE\",\r\n              \"valueRequired\": false,\r\n              \"versionable\": false,\r\n              \"triggerEndPeriodEvent\": false,\r\n              \"allowEdit\": true,\r\n              \"hideOnNew\": false,\r\n              \"identifier\": true,\r\n              \"storages\": [\"SQL\"],\r\n              \"unique\": true\r\n            }, \r\n            {\r\n              \"code\": \"computedValue\",\r\n              \"description\": \"computedValue\",\r\n              \"fieldType\": \"STRING\",\r\n              \"storageType\": \"SINGLE\",\r\n              \"valueRequired\": false,\r\n              \"versionable\": false,\r\n              \"triggerEndPeriodEvent\": false,\r\n              \"allowEdit\": true,\r\n              \"hideOnNew\": false,\r\n              \"identifier\": false,\r\n              \"storages\": [\"SQL\"],\r\n              \"unique\": false\r\n            }\r\n          ]\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						"entityCustomization",
						"cet",
						"createOrUpdate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create CrudEventListenerScript",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a5330beb-32e5-45a7-a67c-f0340cbc6eac",
						"exec": [
							"var script = `\r",
							"package org.meveo.script;\r",
							"\r",
							"import org.meveo.service.script.Script;\r",
							"import org.meveo.service.storage.RepositoryService;\r",
							"\r",
							"import java.util.List;\r",
							"\r",
							"import org.meveo.api.persistence.CrossStorageApi;\r",
							"import org.meveo.model.customEntities.CrudCetTest;\r",
							"import org.meveo.model.customEntities.CrudEventListenerScript;\r",
							"\r",
							"public class ListenerScript extends Script implements CrudEventListenerScript<CrudCetTest> {\r",
							"\r",
							"\tprivate CrossStorageApi crossStorageApi;\r",
							"\tprivate RepositoryService rService;\r",
							"\r",
							"\tpublic ListenerScript() {\r",
							"\t\tcrossStorageApi = getCDIBean(CrossStorageApi.class);\r",
							"\t\trService = getCDIBean(RepositoryService.class);\r",
							"\t}\r",
							"\r",
							"\tpublic Class<CrudCetTest> getEntityClass() {\r",
							"\t\treturn CrudCetTest.class;\r",
							"\t}\r",
							"\r",
							"\t/**\r",
							"\t * Called just before entity persistence\r",
							"\t * \r",
							"\t * @param entity entity being persisted\r",
							"\t */\r",
							"\tpublic void prePersist(CrudCetTest entity) {\r",
							"\t\tentity.setComputedValue(\"computed\" + entity.getValue());\r",
							"\t}\r",
							"\r",
							"\t/**\r",
							"\t * Called just before entity update\r",
							"\t * \r",
							"\t * @param entity entity being updated\r",
							"\t */\r",
							"\tpublic void preUpdate(CrudCetTest entity) {\r",
							"\t\tentity.setComputedValue(\"computedUpdated\" + entity.getValue());\r",
							"\t}\r",
							"\r",
							"\t/**\r",
							"\t * Called just before entity removal\r",
							"\t * \r",
							"\t * @param entity entity being removed\r",
							"\t */\r",
							"\tpublic void preRemove(CrudCetTest entity) {\r",
							"\t\tif (entity.getValue().contains(\"generated\")) {\r",
							"\t\t\tCrudCetTest mainEntity = crossStorageApi.find(rService.findDefaultRepository(), CrudCetTest.class)\r",
							"\t\t\t\t\t.by(\"value\", \"main\")\r",
							"\t\t\t\t\t.getResult();\r",
							"\r",
							"\t\t\tif (mainEntity != null) {\r",
							"\t\t\t\tthrow new IllegalArgumentException(\"Can't remove the generated data if main data exists !\");\r",
							"\t\t\t}\r",
							"\t\t}\r",
							"\t}\r",
							"\r",
							"\t/**\r",
							"\t * Called just after entity persistence\r",
							"\t * \r",
							"\t * @param entity persisted entity\r",
							"\t */\r",
							"\tpublic void postPersist(CrudCetTest entity) {\r",
							"\t\tif(!entity.getValue().contains(\"generated\")) {\r",
							"\t\t\tCrudCetTest generatedEntity = new CrudCetTest();\r",
							"\t\t\tgeneratedEntity.setValue(\"generated\");\r",
							"\r",
							"\t\t\ttry {\r",
							"\t\t\t\tcrossStorageApi.createOrUpdate(rService.findDefaultRepository(), generatedEntity);\r",
							"\t\t\t} catch (Exception e) {\r",
							"\t\t\t\tthrow new RuntimeException(e);\r",
							"\t\t\t}\r",
							"\t\t}\r",
							"\t}\r",
							"\r",
							"\t/**\r",
							"\t * Called just after entity update\r",
							"\t * \r",
							"\t * @param entity updated entity\r",
							"\t */\r",
							"\tpublic void postUpdate(CrudCetTest entity) {\r",
							"\t\tif(!entity.getValue().contains(\"generated\")) {\r",
							"\t\t\tCrudCetTest generatedEntity = crossStorageApi.find(rService.findDefaultRepository(), CrudCetTest.class)\r",
							"\t\t\t\t.by(\"value\", \"generated\")\r",
							"\t\t\t\t.getResult();\r",
							"\r",
							"\t\t\tgeneratedEntity.setValue(\"updatedgenerated\");\r",
							"\r",
							"\t\t\ttry {\r",
							"\t\t\t\tcrossStorageApi.createOrUpdate(rService.findDefaultRepository(), generatedEntity);\r",
							"\t\t\t} catch (Exception e) {\r",
							"\t\t\t\tthrow new RuntimeException(e);\r",
							"\t\t\t}\r",
							"\t\t}\r",
							"\t}\r",
							"\r",
							"\t/**\r",
							"\t * Called just after entity removal\r",
							"\t * \r",
							"\t * @param entity removed entity\r",
							"\t */\r",
							"\tpublic void postRemove(CrudCetTest entity) {\r",
							"\t\tif(!entity.getValue().contains(\"generated\")) {\r",
							"\t\t\tList<CrudCetTest> generatedEntities = crossStorageApi.find(rService.findDefaultRepository(), CrudCetTest.class)\r",
							"\t\t\t\t.getResults();\r",
							"\r",
							"\t\t\ttry {\r",
							"\t\t\t\t\r",
							"\t\t\t\tfor(var generatedEntity : generatedEntities) {\r",
							"\t\t\t\t\tcrossStorageApi.remove(rService.findDefaultRepository(), generatedEntity.getUuid(), CrudCetTest.class);\r",
							"\t\t\t\t}\r",
							"\r",
							"\t\t\t} catch (Exception e) {\r",
							"\t\t\t\tthrow new RuntimeException(e);\r",
							"\t\t\t}\r",
							"\t\t}\r",
							"\t}\r",
							"\r",
							"}\r",
							"\r",
							"`\r",
							"\r",
							"pm.environment.set(\"script\", JSON.stringify(script));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5cc439bd-c9d3-427d-a1ab-d6bd5704405b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{keycloakPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{keycloakUsername}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"code\" : \"org.meveo.script.ListenerScript\",\r\n    \"script\" : {{script}}\r\n} ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/investigation-core/api/rest/scriptInstance/createOrUpdate",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"investigation-core",
						"api",
						"rest",
						"scriptInstance",
						"createOrUpdate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Attach script to CET",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b34a2bbd-e7c5-45f9-a542-eebe63f136dc",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{keycloakPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{keycloakUsername}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n          \"code\": \"CrudCetTest\",\r\n          \"name\": \"CrudCetTest\",\r\n          \"description\": \"CrudCetTest\",\r\n          \"availableStorages\": [\"SQL\"],\r\n          \"sqlStorageConfiguration\": {\r\n            \"storeAsTable\": true\r\n          },\r\n          \"crudEventListenerScript\" : \"org.meveo.script.ListenerScript\",\r\n          \"samples\": [],\r\n          \"fields\": [\r\n            {\r\n              \"code\": \"value\",\r\n              \"description\": \"value\",\r\n              \"fieldType\": \"STRING\",\r\n              \"storageType\": \"SINGLE\",\r\n              \"valueRequired\": false,\r\n              \"versionable\": false,\r\n              \"triggerEndPeriodEvent\": false,\r\n              \"allowEdit\": true,\r\n              \"hideOnNew\": false,\r\n              \"identifier\": true,\r\n              \"storages\": [\"SQL\"],\r\n              \"unique\": true\r\n            }, \r\n            {\r\n              \"code\": \"computedValue\",\r\n              \"description\": \"computedValue\",\r\n              \"fieldType\": \"STRING\",\r\n              \"storageType\": \"SINGLE\",\r\n              \"valueRequired\": false,\r\n              \"versionable\": false,\r\n              \"triggerEndPeriodEvent\": false,\r\n              \"allowEdit\": true,\r\n              \"hideOnNew\": false,\r\n              \"identifier\": false,\r\n              \"storages\": [\"SQL\"],\r\n              \"unique\": false\r\n            }\r\n          ]\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/cet/createOrUpdate",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						"entityCustomization",
						"cet",
						"createOrUpdate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5163cf33-6a2f-4a7c-88ee-cc30b703a3d0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "meveo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "meveo.admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"type\": \"CrudCetTest\",\n        \"name\": \"n\",\n        \"properties\": {\n            \"value\" : \"main\"\n        }\n    }\n]"
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/:project/persistence",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						":project",
						"persistence"
					],
					"variable": [
						{
							"key": "project",
							"value": "default"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve data - modified by prePersist",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1ec298a-0d01-474d-aee6-56f82d40b294",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Computed value is set\", function () {\r",
							"    pm.expect(jsonData[0].computedValue).to.eql(\"computedmain\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"mainUUID\", jsonData[0].uuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "meveo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "meveo.admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"filters\": {\r\n        \"value\": \"main\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/:project/persistence/:cet/list",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						":project",
						"persistence",
						":cet",
						"list"
					],
					"variable": [
						{
							"key": "project",
							"value": "default"
						},
						{
							"key": "cet",
							"value": "CrudCetTest"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve data - created by postPersist",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3390511-1fcc-4a1b-9a80-63f368aa69e0",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Computed value is set\", function () {\r",
							"    pm.expect(jsonData[0].computedValue).to.eql(\"computedgenerated\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"generatedUUID\", jsonData[0].uuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "meveo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "meveo.admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"filters\": {\r\n        \"value\": \"generated\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/:project/persistence/:cet/list",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						":project",
						"persistence",
						":cet",
						"list"
					],
					"variable": [
						{
							"key": "project",
							"value": "default"
						},
						{
							"key": "cet",
							"value": "CrudCetTest"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update data",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "meveo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "meveo.admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"type\": \"CrudCetTest\",\n        \"name\": \"n\",\n        \"properties\": {\n            \"value\" : \"main\"\n        }\n    }\n]"
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/:project/persistence",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						":project",
						"persistence"
					],
					"variable": [
						{
							"key": "project",
							"value": "default"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve data - modified by preUpdate",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9fc5d50e-27ea-4bab-922d-b1de86a61071",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Computed value has been updated\", function () {\r",
							"    pm.expect(jsonData[0].computedValue).to.eql(\"computedUpdatedmain\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "meveo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "meveo.admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"filters\": {\r\n        \"value\": \"main\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/:project/persistence/:cet/list",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						":project",
						"persistence",
						":cet",
						"list"
					],
					"variable": [
						{
							"key": "project",
							"value": "default"
						},
						{
							"key": "cet",
							"value": "CrudCetTest"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve data - data created by postPersist is modified by postUpdate",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "79511ffe-b57a-429e-9a1f-746f09f256a8",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Value has been updated\", function () {\r",
							"    pm.expect(jsonData.value).to.eql(\"updatedgenerated\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "meveo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "meveo.admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/:project/persistence/:cet/{{generatedUUID}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						":project",
						"persistence",
						":cet",
						"{{generatedUUID}}"
					],
					"variable": [
						{
							"key": "project",
							"value": "default"
						},
						{
							"key": "cet",
							"value": "CrudCetTest"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete data created by postUpdate - rejected by preRemove",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b65a5fee-8a33-41d6-a34f-2a9de2697935",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "meveo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "meveo.admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"type\": \"Name\",\n        \"name\": \"n\",\n        \"properties\": {\n            \"value\" : \"Tony\"\n        }\n    }\n]"
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/:project/persistence/:cet/:uuid",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						":project",
						"persistence",
						":cet",
						":uuid"
					],
					"variable": [
						{
							"key": "project",
							"value": "default"
						},
						{
							"key": "cet",
							"value": "CrudCetTest"
						},
						{
							"key": "uuid",
							"value": "{{generatedUUID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete data",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "meveo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "meveo.admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"type\": \"Name\",\n        \"name\": \"n\",\n        \"properties\": {\n            \"value\" : \"Tony\"\n        }\n    }\n]"
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/:project/persistence/:cet/:uuid",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						":project",
						"persistence",
						":cet",
						":uuid"
					],
					"variable": [
						{
							"key": "project",
							"value": "default"
						},
						{
							"key": "cet",
							"value": "CrudCetTest"
						},
						{
							"key": "uuid",
							"value": "{{mainUUID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve data - data created by postPersist is deleted by postRemove",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "118ce194-6880-47e4-9746-f1919c5878f8",
						"exec": [
							"pm.test(\"All data has been removed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "meveo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "meveo.admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/:project/persistence/:cet/list",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						":project",
						"persistence",
						":cet",
						"list"
					],
					"variable": [
						{
							"key": "project",
							"value": "default"
						},
						{
							"key": "cet",
							"value": "CrudCetTest"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete CET",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "meveo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "meveo.admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/{{webContext}}/api/rest/entityCustomization/entity/:cetCode",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{webContext}}",
						"api",
						"rest",
						"entityCustomization",
						"entity",
						":cetCode"
					],
					"variable": [
						{
							"key": "cetCode",
							"value": "CrudCetTest"
						}
					],
					"query": [
						{
							"key": "withData",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove script",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{keycloakPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{keycloakUsername}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{port}}/investigation-core/api/rest/scriptInstance/org.meveo.script.ListenerScript",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"investigation-core",
						"api",
						"rest",
						"scriptInstance",
						"org.meveo.script.ListenerScript"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}