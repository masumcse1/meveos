<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html" 
	xmlns:hftl="http://hftl.org"
	xmlns:hf="http://xmlns.jcp.org/jsf/composite/tags"
	xmlns:o="http://omnifaces.org/ui"
	template="/layout/template.xhtml">
	
	<o:importConstants type="org.meveo.model.admin.MvCredential.AuthenticationType" />

	<ui:define name="metadata">
		<f:metadata>
			<f:viewParam name="objectId" value="#{storageConfigurationBean.objectId}" />
		</f:metadata>
	</ui:define>

	<ui:define name="body">
		<h:form id="crumbmenuForm">
			<p:breadCrumb homeDisplay="text" id="crumbmenu">
				<p:menuitem value="#{messages['menu.configuration']}" disabled="true" />
				<p:menuitem value="Storages" outcome="credentials" />
				<p:menuitem value="Storage configurations" outcome="storageConfigurations" />
				<p:menuitem
					value="#{storageConfigurationBean.entity.code}"
					disabled="true" rendered="#{!storageConfigurationBean.entity.transient}" />
			</p:breadCrumb>
		</h:form>

			<hftl:formPanel formId="formCredential"
				label="#{messages['repository.title']}"
				backingBean="#{storageConfigurationBean}" showFormButtons="false">
				
				<p:tabView id="tabView">
				
				<p:tab title="Storage">
					<hftl:formField label="#{messages['businessEntity.code']}"
						field="code" required="true" validateUnique="true" allowEdit="false" />
						
					<hftl:formField label="#{messages['businessEntity.description']}"
						field="description"
						edit="#{storageConfigurationBean.entity.code ne 'default'}" />
						
					<hftl:formField label="Hostname" field="hostname" required="false"/>
						
					<hftl:formField label="Protocol" field="protocol" required="false"/>
					
					<hftl:formField label="Port" field="port" required="false"/>
						
					<hftl:formField label="Credential" required="false"
						field="credential" valueField="id" valueLabelField="code"
						popup="false" listBean="#{mvCredentialBean}" />

					<hftl:decorateFormField label="Storage type" required="true">
						<p:selectOneMenu value="#{storageConfigurationBean.entity.dbStorageType}" required="true">
							<f:selectItem/>
							<f:selectItems 
								value="#{storageConfigurationBean.dbStorageTypes}" 
								var="item"
								itemValue="#{item}"
								itemLabel="#{item.code}"	
							/>
							<hftl:objectConverter />
						</p:selectOneMenu>
					</hftl:decorateFormField>
						
				</p:tab>
			
				<hftl:customFields backingBean="#{storageConfigurationBean}" messagesId=":formCredential:messages" />

		</p:tabView>

			<ui:param name="buttons" value="true" />
			<ui:define name="buttons">
				<p:commandButton id="saveButton" value="#{messages['action.save']}"
					onclick="delayDisable(this);" oncomplete="this.disabled=false;"
					action="#{storageConfigurationBean.saveOrUpdate}" icon="ui-icon-check"
					update="@form">
					<f:param name="edit" value="true" />
				</p:commandButton>
				<hf:clearButton label="#{messages['action.reset']}"
					edit="#{storageConfigurationBean.edit}"
					rendered="#{storageConfigurationBean.canUserUpdateEntity()}"
					resetAction="#{storageConfigurationBean.resetFormEntity()}" />
				<p:button id="backButton" value="#{messages['action.back']}"
					outcome="#{storageConfigurationBean.back()}" />
				<p:commandButton icon="ui-icon-trash"
					value="#{messages['commons.delete']}" immediate="true"
					onclick="PF('deleteDialog').show();"
					rendered="#{storageConfigurationBean.entity.code ne 'default'}">
				</p:commandButton>
			</ui:define>
		</hftl:formPanel>
		
	</ui:define>
</ui:composition>